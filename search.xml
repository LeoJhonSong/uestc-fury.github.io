<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[2020电气组寒假培训第15讲_急停，惯性，制动超行程开关]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC15%E8%AE%B2_%E6%80%A5%E5%81%9C%EF%BC%8C%E6%83%AF%E6%80%A7%EF%BC%8C%E5%88%B6%E5%8A%A8%E8%B6%85%E8%A1%8C%E7%A8%8B%E5%BC%80%E5%85%B3%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 急停开关 安放在车辆主环顶部左右各一个，驾驶舱内一个 常闭开关，按下断开 惯性开关 12.5.3 惯性开关必须能够被赛车的 6-11g 的减速度所触发，阈值取决于减速时间，详细见 Sensata 产品说明书 在车辆受到撞击时，瞬间断开安全回路 制动超行程开关 当刹车失灵时，刹车踏板可踩踏的最大限度超过设计范围，此时刹车踏板触碰制动超行程开关，断开安全回路 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>安全回路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第14讲_电池管理系统]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC14%E8%AE%B2_%E7%94%B5%E6%B1%A0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 电池管理系统(BMS) 对动力电池进行管理 检测功能 ①电压采集：从控负责，将每一个电池单体的正负极都连接至从控，采集每一个电池单体的电压- ②电流采集：霍尔电流传感器，信号线接入主控 ③温度采集：热敏电阻贴到电池表面，信号线接入从控 评估功能 SOC（State of Charge）荷电状态，电池的剩余电量 控制功能 继电器的控制：将继电器的线圈黑线接到主控上，在满足上电需要时，BMS在对应的接线处给出GND信号；当BMS检测到电池发生异常，发出警告，并且断开所有继电器。 若BMS出现一级警报，断开所有继电器的同时，串联进安全回路的K5-也会断开安全回路，此时继电器红黑线全断。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>安全回路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[底盘车身基础01-轮胎]]></title>
    <url>%2F2020%2F02%2F%E5%BA%95%E7%9B%98%E8%BD%A6%E8%BA%AB%E5%9F%BA%E7%A1%8001-%E8%BD%AE%E8%83%8E%2F</url>
    <content type="text"><![CDATA[不知道大家有没有自己去学习了解一些汽车理论方面的知识，这个系列希望能够帮助专业不相关的同学更快入门吧，顺带扯一句我专业生物医学工程我也就看明白了（笑 为什么说轮胎最重要，相信大家在看简介的时候就已经有了一定的理解。赛车的全部抓地力都是由轮胎与地面不过巴掌大的接触面实现的。所以我们为了赛车的提升做的所有优化本质上都是为了提升轮胎对地面的最大摩擦力。因此在所有的子系统之前，我们必须了解轮胎。 轮胎是一台汽车上最重要的零件（没有之一）。 ​ ——鲁迅 轮胎坐标系为了清晰地描述车轮的运动模式，我们定义轮胎坐标系来描述轮胎的运动模式。 轮胎坐标系为一个以车轮正前方为x轴正方向，与地面垂直的正上方为z轴正方向的右手系。 在这个坐标系上我们可以清楚地表示一些轮胎的运动规律： 轮胎运动过程中受到切向，侧向与地面法向三个方向的地面反作用力FX，FY，FZ； 轮胎受到三个方向的力矩：切向称为翻转力矩TX，地面法向称为回正力矩TZ，侧向为滚动阻力矩TY； 轮胎的滚动并不是圆柱体的滚动，轮胎滚动可能存在外倾角γ； 轮胎的实际行驶方向可能与轮胎朝向产生偏角，这被表示为侧偏角u。 附着力赛车依靠轮胎受到的地面的反作用力运动，这就是所谓的“抓地力”，为了表示它的极限值，我们引入了附着力的概念。同时类比于摩擦系数，我们使用附着系数来称呼附着力与地面正压力的比值。 F_{max}=F_Zφ\qquad φ=\frac{F_{max}}{F_Z}式中Fmax为附着力，φ为附着系数。根据力的合成分解原理，附着力与附着系数还可以分为纵向(切向)与横向(侧向)，分别对应最大的纵向与侧向的地面反力。与此同时，我们还使用附着率C表示轮胎实际附着情况： C=\frac{F}{F_Z}可以看出附着率是一个变量，他与附着系数之恒间有C ≤ φ。 我们知道，优化赛车的根本手段是提高赛车轮胎的附着力。根据公式，附着力的提高有两种方法。 提高正压力FZ 如果单纯使用增重提高正压力的话，车重带来的惯量会损失赛车的灵活性。尤其是有输出功率限制的FSAE比赛，增重会极大的影响赛车的直线加速成绩。所以最好地提升手段是使用空气动力学套件，利用气动下压力使赛车在速度较快的弯角获得更大的附着力。 提高附着系数φ 附着系数是一个受到地面质量、轮胎橡胶性质、轮胎花纹、轮胎接地面积、轮胎倾角、滑移率、侧偏角等等很多物理属性影响决定的常量。 因为它非常复杂，随着工况变化而变化，所以目前没有实时定量的技术水平，只能通过测试估计。但是工程上已经针对各种条件总结出了附着系数的估计值与变化规律。整个底盘系统绝大部分优化基于附着系数变化的规律，我们在之后的章节中细节分析。请大家牢记附着系数的概念。 轮胎的纵向运动之前我们了解到，当车轮转矩过大时，轮胎的滚动状态就会被破坏而进入滑动状态，发生空转或抱死。现在我们来讲点细节。 现象如果车轮是一个刚性的圆柱体，而地面是理想粗糙平面，那么车轮与地面之间的滚动就完全依靠圆柱面与地面之间的静摩擦力实现了，此时地面的附着系数完全等于滑动摩擦系数。这时车轮转矩对应到地面切向反力会有两种状态： 当车轮转矩输出到接触面面上的切向力小于附着力(rT ≤ FXmax)，此时车轮完全滚动。切向力等于这个转矩的输出。 当车轮转矩输出到接触面上大于附着极限(rT &gt; FXmax)，此时车轮开始滑动，切向力达到附着力并保持在附着力上。 然而现实中的轮胎是充气的柔软橡胶表面，地面也是颗粒不平的粗糙平面。这个现实问题让我们不能用上述简单模型描述轮胎运动。实际上的轮胎运动过程中，由于橡胶的柔软，轮辋经由轮胎将力传导至地面的过程中，轮胎接地面会产生微小的形变。所以轮胎在加减速行驶过程中，胎面一直会与地面之间产生微观上的滑移。也就是说，轮胎在加减速行驶过程中，一直处于一种“边滚边滑”的状态。 为了描述这种状态，我们引入滑移率的定义： 滑移率 s=\frac{u-u_w}{u}\times100\%=\frac{u-rω}{u}\times100\%式中u表示车速，uω表示车轮转动线速度，ω为车轮滚动角速度，r为车轮半径。滑移率表示滑动摩擦在车轮纵向运动中所占的比重。当车轮纯滚动时，uω= u ，s = 0；当车轮抱死纯滑动时，uω= 0 , s =100%；当车轮边滚边滑时，u &gt; uω ，0 &lt; s &lt; 100%。车轮滑移率越大，说明车轮在运动中滑动成分所占的比例越大。 滑移率能够描述轮胎因为微观形变产生的滑移（肉眼几乎不可见），也能够描述轮胎的宏观滑移（明显的车轮滑行）。经验告诉我们，一般当滑移率s ≤ 0.2，轮胎几乎不会产生宏观滑移；当这个数值超过0.2并逐渐增大，轮胎开始产生宏观滑移，并且微观滑移的强度会随着这个数值增大而减弱。这个规律的产生原因与橡胶轮胎的物理特性有关，我把有关内容放扩展吧这里不赘述。 现在我们来看看滑移率这个指标对赛车的影响 定性分析由于轮胎的变形程度受到地面纵向反力的直接影响，即有地面纵向反力的产生意味着轮胎一定产生微观滑移。也就是说若将滑移率与车轮所受纵向反力作图，这条线将会通过原点。因此滑移率能够在一定程度上直接反应轮胎所受纵向反力的大小。 现在我们将滑移率直接设置为车轮的参数变量，这意味着如果此时有一个地面法向反力作用在这个带有滑移的车轮上，车轮将输出这个滑移所对应的纵向反力。 F_X=f[F_Z,s]显然这个纵向反力是能够根据输入的法向力FZ与滑移率s唯一确定的。并且这个力应当是在这个状态下轮胎能够受到的最大纵向反力，符合纵向附着力FXmax的定义。 F_{X_{max}}=f[F_Z,s]所以若我们消去地面法向反力FZ的影响，就可以看出滑移率s与纵向附着系数φX之间存在的对应关系。这样我们就得到了滑移率 - 纵向附着系数的图像。 φ_X=f[s] 从这个图像里我们可以看出： 在非松质路面下 随着滑移率提升，轮胎的附着能力基本符合线性增长-峰值区间-衰减的规律； 附着系数峰值普遍出现在上文提到的微观滑移与宏观滑移相结合的区间。也就是说，最佳的加速或制动性能出现在轮胎肉眼观察将要出现滑动的临界点，符合客观规律； 这个曲线会受到路面条件很大的影响，实际上附着系数本身就是一个受到很多因素影响的常量。 在松质路面下 斜率变化平缓，超高的滑移率反而会带来更强的附着能力； 后段附着能力提升来源于轮胎在松质土地中“刨地”的现象。这就是拉力赛中车手更多使用漂移技术的原因。如果你了解拉力，你会发现虽然在烂路赛段车手会漂移，但在铺装路面赛段车手还是会老实抓地跑的。 实际上轮胎的纵向力学性能受到很多因素的影响，这条曲线的参数还会因为轮胎的配方花纹气压等因素发生改变，在此不赘述。 以上就是轮胎纵向力学的基本规律，接下来讲轮胎的侧向力学规律。 轮胎的侧偏运动轮胎侧向力学研究的是轮胎实际行驶方向与轮胎指向产生侧偏角的原因。 现象与纵向运动采用相同的方式开始吧：我们再次假设轮胎是一个刚性圆柱，而地面是一个粗糙的理想平面。轮胎与地面的侧向附着系数φY等于胎面的摩擦系数。此时如果车轮带有初速度，并且不受外力作用，车轮将匀速地沿着轮胎所指的方向滚动。此时如果给轮胎施加侧向力Fy，那么轮胎会受到地面的侧向反力FY的作用。按照这个逻辑，就可以估计出轮胎侧向运动的现象： 当侧向力未达到轮胎的侧向附着力(Fy ≤ FYmax)，轮胎在侧向上与地面仍然是静摩擦的状态，所以轮胎依旧沿着原有的方向直线匀速滚动； 当侧向力超过了轮胎的侧向附着极限(Fy &gt; FYmax)，轮胎在侧向上开始了滑动摩擦，发生侧向运动。侧向运动与原有的滚动的合运动与轮胎的指向间产生了一个角度，我们称其为侧偏角α，轮胎的行驶方向与实际指向不同，这就是轮胎的侧偏运动。 然而需要再一次强调的，现实中的轮胎是一个柔软的充气橡胶物体，地面也是颗粒不平的，所以上述理想模型肯定是无法描述实际情况的。侧偏运动的实际原理较之纵向运动在理解上稍复杂一些，我们另起一段↓ 在地面侧向反力的作用下，如果轮胎是静止不动的，那么轮胎靠近地面的部分就会被“掰弯” 在这种形变下，轮胎接地面的中心轨迹就会发生变化，我们可以在图上清楚地看出来：A0到A5的位置在正视图上发生了明显的弯曲。如果此时轮胎滚动的话，很容易想象的是，车轮的滚动路线就会沿着轮胎的中心线发生偏移。一个柔软的轮胎在收到侧向力状态下滚动的时候，这种弯曲的状态是实时发生的，轮胎每转过一个点，就会随着这个轨迹发生偏移。因为这个现象，只要轮胎受到侧向力的作用，它就会产生侧偏运动。 理解了之前在纵向运动中描述的“微观形变”，你就会意识到，轮胎侧偏角与滑移率一样，与轮胎受到的侧向反力直接对应，当轮胎受到侧向反力FY，它就会产生侧偏角α。因此我们也可以用侧偏角一定程度上反应轮胎受到侧向反力的大小。 定性分析现在我们可以用熟悉的方式操作了：我们将侧偏角也作为车轮运动的参数变量，将法向反力FZ、侧偏角α作为输入，就可以直接得到轮胎所受到的侧向反力FY的值： F_Y=f[F_Z,α]可以看到，这个侧向反力也是可以根据输入唯一确定的，我们把它直接换成侧向附着力FYmax: F_{Y_{max}}=f[F_Z,α]然后我们将轮胎的法向力FZ设为不同的定值，就得到了侧偏角 - 侧向反力的图像。 F_{Y}=f[α] 这个图像告诉我们： 与滑移率相同，侧偏角图像有一个线性增长的区间，而在到达峰值后会很缓慢的衰减； 由于轮胎侧向运动的速度与纵向运动速度之间存在着很大的差距，所以侧向反力的图像与纵向附着系数的前段非常相似。 图像因变量为侧向反力，所以随着地面法向反力FZ的增加和减少，曲线的幅度会发生变化。 看到这里大家可能产生了一点疑惑：为什么使用侧向反力作为因变量，而不是侧向附着系数呢？ 再稍加仔细地观察，上面的图像中随着正压力的变化，曲线的变化并不是线性的：轮胎的侧向附着系数与轮胎所受的法向反力相关。轮胎产生扭转变形引起的侧偏运动相较于纵向的滑移，对压力更加敏感，过高的压力会引起侧向附着系数的下降。 因此我们描述轮胎侧向性能的时候，一般不用侧向附着系数，而是侧偏刚度k。在很多文献中的附着系数φ指纵向附着系数。 侧偏刚度侧偏刚度定义为轮胎所受侧向力Fy与侧偏角α的比值，单位为（N/deg)。在轮胎坐标系中观察规律，我们会发现侧向力与侧偏角的方向是相反的，所以侧偏刚度是一个负值。如果将它放在图像上，它是侧偏角 - 侧向力图像在原点的斜率。由于图像在到达峰值区域前仍然有相当长的一段线性区间，因此侧偏刚度还是能够很好地用来描述轮胎的侧向性能的。 现在我们看看垂直载荷(法向力) - 侧偏刚度的图像 ↑很清楚地看见，对于同种型号的轮胎，随着法向力的增加，侧偏刚度有线性增长 - 增速放缓 - 下降的变化趋势。因此可以很自然地看出为什么在评价侧向性能指标时不使用侧向附着系数。在这个趋势下我们做出垂直载荷 - 侧偏力(侧向反力)的图像，它应该是这样的↓ 这两幅图像告诉我们： 决定赛车过弯性能的本质还是轮胎，赛车轮胎本身更高的侧偏刚度决定了赛车能够实现远超民用车的过弯响应； 由于侧偏性能受到轮胎垂直载荷的影响，重量大的赛车在弯道上必然陷入劣势。因此车子还是越轻越好； 气动下压力能够在不提升车重的基础上提升过弯性能。 实际上如果垂直载荷无限增大，轮胎的纵向力学特性也会受到这样的影响。但是一般载荷无法增大到这个量级，而且在到达明显变化的区间之前，轮胎应该已经爆了（笑 附着椭圆现在我们来看看侧偏运动与纵向运动之间的关系。之前我们了解过g值圆的概念。使用g值圆衡量车手驾驶水平时，我们会注意刹车 - 入弯的加速度转移过程。 纵向附着与侧向附着的共同点就是都伴随着轮胎的形变，橡胶的变形张力极限就是这些加速度极限的来源。所以轮胎能提供的最大纵向力与侧向力是关联在一起的。如果将轮胎的纵向附着力与侧向附着力做图，就会是如下的形式↓ 在图上我们很容易就能看出：在不同的侧偏角下，侧向附着都有随着随着纵向附着增大而减小的趋势。这些图线的包络形成一个椭圆形，因此被称为附着椭圆。 如果你理解了以上内容，你就已经掌握轮胎行驶过程中两个分运动方向的基本运动形式了。现在我们了解一些其他的关键知识点吧。 回正力矩我们转向时，会在方向盘上感受到促使方向盘回正的力，组成这个力的成分中，就有一部分来自于轮胎的回正力矩。 现象在轮胎坐标系中，回正力矩被定义为地面法向的力矩。当轮胎侧偏运动的时候，在这个方向上就会有力矩使轮胎倾向于与轮胎实际运动的方向对正。 要解释这个力矩产生的原因，我们还是那句老话：轮胎是一个柔软的充气橡胶圆柱。由于刚性轮理想模型不会产生回正力矩，这里我们直接讲实际现象。 当在地面上滚动的时候，柔软的轮胎与地面之间存在一个近似于椭圆或圆角矩形的接地面。如果我们再细分，这个面可以被分为很多与轮轴平行的线微元。很好理解的是，在轮胎滚动的瞬态过程中(不存在宏观滑移)，这个接地平面最后段旧的微元离开地面，而最前端又有新的微元接触地面，循环往复。↓ 现在我们给轮胎加上侧向力，于是轮胎开始有了侧偏运动，接地面就与正常滚动的轮胎相比发生偏移↓ 上图中存在一个非常明显的问题：接地面前后端的偏移量是相同的,这是轮胎静止产生的。在轮胎滚动的过程中，由于接地面的前后端接地时间不同，后端明显比前端接触地面时间更长，偏移距离也更长，因此这个接地面在滚动时应该是一个接近平行四边形的状态↓ 这样一来回正力矩的产生也就不难理解了：根据弹力的原理，接地面后端更大的形变量显然会引起更大的轮胎回弹力。在接地面上的前后弹力差形成了促使轮胎指向实际行驶方向的回正力矩。 定性分析回正力矩与侧偏运动是同时存在的，我们使用侧偏角来关联轮胎产生的侧向附着力，也用侧偏角来关联回正力矩。先人根据经验整理出了如下图所示的关系↓ 这张图像可以很清晰地看出： 回正力矩的变化趋势同样是近线性增长 - 峰值区间 - 减弱； 随着正压力的变化存在幅度变化； 更加仔细地观察，我们会发现，相较于纵向附着与侧向力，回正力矩的下降非常剧烈。究其原因还是它的发生机理：当轮胎接近附着极限时，接地面的后端显然会比前端更早突破极限并开始宏观滑移。当后端回弹力不再增大而前端回弹力持续增加，轮胎的回正力矩就开始下降，甚至在极端情况下达到负值。因此，有经验的车手能够通过方向盘力回馈的变化来判断赛车转向过程中侧向极限的逼近程度。 如果将接地面所受的力积分，我们会发现这个合力在数值上就是侧向反力FY。它的作用点恰好能将这个合力分为数值相等的前后两部分，作用点与轮胎坐标系z轴的纵向距离被称为轮胎拖距e。显然的对于回正力矩TZ存在 \vec T_Z=\vec F_Y\times \vec e外倾角轮胎坐标系中还有一个定位输入量——外倾角。之前描述的现象中，我们都有“轮胎正着滚动”这样一个大前提，现在我们加入最后一个变量。 现象轮胎在滚动过程中出现了倾角，那么它会开始转向倾倒的方向滚动，直到倒下为止。你可以试着滚一枚硬币，当它开始倾倒的时候也会出现这种现象。这是因为倾斜滚动的物体可以类比为一个滚动的圆锥或圆台，因为滚动半径的不同，必然会向着滚轴倾斜的方向转弯。这种现象也会被称为“滚锥效应”。 ↑因此当轮胎指向固定而带着外倾角行驶时，外倾的偏转行驶趋势受到轮胎固定装置的约束力Fy作用，会与地面之间产生额外的侧向反力FYγ&lt;/sub&gt;。这个力被称为外倾侧向力。 定性分析我们将外倾角与滑移率或侧偏角一样，作为轮胎的一个参数输入轮胎的话，就会得到外倾角 - 外倾侧向力的关系↓ 根据图像所示的关系，我们不难推断： 外倾角与外倾侧向力关系基本是线性的； 类比于侧偏刚度k，我们将外倾角转化为外倾侧向力的系数称为轮胎的外倾刚度kγ； 如果一个轮胎在滚动中同时带有侧偏角与外倾角，那么这两个变量带来的侧向力能够叠加。 所以如图所示↑，一个轮胎所受的侧向力FY可以有如下关系： F_Y=k\alpha +k_{\gamma}\gamma总结一下至此，我们基本了解了与轮胎有关的所有参数与变量。事实上在现代的工程设计过程中，轮胎的特性参数会根据一系列的测试建立数学模型，并封装到仿真工具中。实际操作过程中可能并不会接触到这些底层的问题。但是一定要有对这些现象的基本理解，因为这些关系本身就是很多设计思路的理论基础。 轮胎模型系统一般以如下的形式存在： 轮胎魔术公式模型是由代尔夫特理工大学的Hans B. Pacejka教授提出的一系列描述轮胎动态力学性质的数学模型，目前在工程界被广泛地使用。关于它的具体关系在此不做赘述，大家有兴趣的或者工作涉及仿真与轮胎模型时请自行查阅吧。 一些资源 James Sun - 从拟真向竞速游戏出发，聊聊关于赛车动力学的事（轮胎篇） 汽车理论课件-汽车理论第五版-清华大学余志生 - 百度文库 Hans B. Pacejka - wikipedia 马语者 - 轮胎的魔术公式(Magic Fomula)模型 汽车理论（清华大学） - bilibili document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>底盘组培训</category>
        <category>车身组培训</category>
        <category>2020寒假</category>
        <category>2020寒假</category>
        <category>底盘车身基础</category>
      </categories>
      <tags>
        <tag>陈松格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第13讲_绝缘检测装置]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC13%E8%AE%B2_%E7%BB%9D%E7%BC%98%E6%A3%80%E6%B5%8B%E8%A3%85%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 搭铁 车架与低压GND相连 将低压电池的负极与车架相连，由于车架导电，因此所有低压元器件的GND线直接与车架相连即可 绝缘检测装置(IMD) 两个电气连接点之间电阻无穷大，称为绝缘 由于实际工程非理想情况，因此电阻大于一定值即可认为绝缘 7.4.3 当和驱动系统的最大工作电压关联时，绝缘检测装置的响应值需设定为小于等于 500Ω/V $4.2V \times 80 \times 500Ω/V=168KΩ=0.168MΩ$ 漏电指动力电池正负极与车架电阻过低 因此，漏电发生时，必须马上采取安全措施，断开安全回路 7.4.4 当发生绝缘故障或绝缘检测装置故障时，绝缘检测装置必须断开安全回路。这必须在不受任何 逻辑运算(如微控制器)的影响下完成。在绝缘故障发生后再次激活驱动系统的方法见第五章 7.1.6。 （该图接线错误，2020版规则要求HV+和HV-两根高压检测线连接继电器输出侧）也就是如下图所示 当电池正负极和GND之间电阻过低时，该绝缘检测装置输出信号突变 正常情况下，该装置输出12V,绝缘故障时，输出9.3V 7.4.5 座舱内在显眼位置必须装配一个标识为“IMD”的红色的指示灯，当绝缘检测装置检测到一个绝 缘故障或自身故障时，指示灯必须点亮。指示灯在强烈阳光照射下必须清晰可见。控制这个指示的 信号是系统关键信号，见第二章 12.4。 由于漏电为整台车最危险的情况之一，因此专门采用醒目的指示灯指示绝缘故障 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>安全回路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第12讲_制动可靠性检测]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC12%E8%AE%B2_%E5%88%B6%E5%8A%A8%E5%8F%AF%E9%9D%A0%E6%80%A7%E6%A3%80%E6%B5%8B%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 2.4 加速踏板/制动踏板可靠性检查 2.4.1 当加速踏板位置传感器的信号输出超过 25%并踩下制动踏板，且这一状态持续 500ms 以上时， 电机的目标转矩必须为 0Nm。加速踏板规则第二章 12.3。 当油门刹车同时踩下，相当于油门不踩，只有当油门刹车松开，再踩下油门，才恢复正常 IF 油门传感器的电压&lt;某值 and 刹车传感器的电压&lt;某值 Then 电机转矩=0 7.5.1 当用力制动（车轮未抱死）并且电机控制器依旧输出正向电流（使赛车有前进趋势的电流）时 安全回路必须由一个独立非编程电路永久的断开。只有低压系统主开关可以重置此功能并闭合安全 回路。 刹车的工作原理 踩下刹车踏板后，杠杆推动主缸释放刹车油，刹车油通过刹车油路流向卡墙，刹车油压越大，卡钳夹紧刹车盘越紧 因此，刹车油压传感器可以最大限度地反映刹车工作情况 规则要求，BSPD对刹车的检测必须使用刹车油压传感器 12.6.5 为了检测紧急制动，必须安装一个制动系统压力传感器。阈值的选择必须是没有车轮锁死 或者制动压力 &lt;= 30bar。 刹车油压传感器 串联进入刹车油路，讲刹车油压转化为电压值 讲刹车油压传感器的信号线连接到电压比较器，电压比较器的阈值设为1.5V 霍尔电流传感器 霍尔电流传感器采集高压线上的电流，因为电流直接决定了电机功率 霍尔电流传感器可以将电流转化为电压，将该电压接入电压比较器 BSPD 当刹车油压传感器的电压比较器和霍尔电流传感器的电压比较器都输出高电位时，断开安全回路 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>安全回路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第11讲_行程传感器，低压主开关]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC11%E8%AE%B2_%E8%A1%8C%E7%A8%8B%E4%BC%A0%E6%84%9F%E5%99%A8%EF%BC%8C%E4%BD%8E%E5%8E%8B%E4%B8%BB%E5%BC%80%E5%85%B3%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 刹车传感器 直线位移传感器，本质上是一个滑动变阻器 行程的变化对应阻值的变化 输入一个额定电压，将输出线连接至单片机，单片机采集输出电压来确定刹车踏板的深浅 油门传感器 采用节气门传感器，具体工作原理同上 低压系统主开关 低压系统主开关启动后，低压设备启动 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>整车电路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第10讲_测量点，DC/DC]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC10%E8%AE%B2_%E6%B5%8B%E9%87%8F%E7%82%B9%EF%BC%8CDCDC%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 测量点 需要在维护车辆时测量电控两端的电压 高压回路中没有电压测量点（安全考虑） 将电控的正负极引出至车身表面，并且保证安全 测量点回路由人体保护电阻和香蕉插座组成 5.7.6 每个驱动系统测量点都必须用根据下表用限流电阻保护起来。禁止用保险丝保护驱动系统测量 ~ 92 ~ 点。电阻的额定功率的选择必须能够承受当两个驱动系统测量点短路时的电流。 人体保护电阻防止TS+和TS-之间的短路 香蕉插座 电气行业上的专用电压采集插座 5.7.3 驱动系统测量点应采用具有达到 CATⅢ-1000V 标准或更高标准的非黑色 4mm 电气专业绝 缘插头。 香蕉插座作为测量点与电控正负极相连，香蕉插头连接万用表 DC/DC 将动力电池的高压转化为低压电，供大功率低压设备使用 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>整车电路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三维绘图01-零件还原]]></title>
    <url>%2F2020%2F02%2F%E4%B8%89%E7%BB%B4%E7%BB%98%E5%9B%BE01-%E9%9B%B6%E4%BB%B6%E8%BF%98%E5%8E%9F%2F</url>
    <content type="text"><![CDATA[【多图警告】相信大家都有自己学过SolidWorks的基本绘图方法了，现在给大家讲解一个稍微有点规模的实物绘制三维模型实例，我会在实例中说明一些规范性要求以及一些实用的方法。 零件的范例模型会在实例中发出来。希望需要学习三维制图的同学一定跟着实例讲解一步一步动手操作，在绘制实例的过程周了解课程或者网络资源上讲述的画图功能的综合运用方法，真正掌握灵活的绘图技巧。 实例：iPhone 5点击下载→范例模型 请安装SolidWorks 2016或以上版本查看 iPhone 5相信很多用过的同学手上都有实物，如果你有卡尺角度尺之类的量具的话可以自己掏出旧手机打开SolidWorks尝试着画一下。当然一定是有人没用用过的（比如我）。所以我看的是图纸和网上的图片。 拿到图纸以后首先思考如何开始这个零件的绘制： 这台手机近似于一个立方体的形状，所以我们可以从一个立方体开始增加细节； 手机周围的孔与按钮是许多拉伸凸台与拉伸切除； 手机上有许多按钮是槽口形状，可以直接在草图中绘制； 手机表面的光泽效果来源于透明件，可以在模型中复制这个效果； 手机的摄像头内部结构复杂，如何简化从而使用最少的特征还原效果； 手机的表面有许多接缝和分色，如何还原这个效果。 进行了以上甚至更多思考之后，我们开始一面一面的将这台手机还原出来。 三维建模正面首先起形，读到图中手机主体部分最外廓的信息，我们绘制出主体凸台，并添加圆角R9.15； 然后加上两面的倒角； 然后使用特征-&gt;曲线-&gt;分割线特征将手机的屏幕，听筒，光探头和前摄轮廓画来； ↑由于图纸上并没有确标出光探头的孔径，这里使用目测估算。 然后我们将HOME键周围画出0.1mm的缝隙，这条缝隙会在制作透明效果时体现作用。注意使用薄壁特征时切除应在圆环外侧。 前置摄像头现在我们画前摄，使用旋转切除的方式还原效果，首先建立基准面：为了建立经过旋转轴的基准面，我们在建立面之前先画一条草图线 通过草图线与平面就可以建立基准面了：选择特征-&gt;参考几何体-&gt;基准面建立基准面； 然后绘制如图所示草图，并旋转切除； ↑需要注意的是，我们为了避免报错，会十分注意尽量将切除特征画成闭环切除； 正面玻璃护边如果你仔细观察，iPhone 5的正面玻璃是镶嵌安装的，手机的正面周围会有凸起的护边，这也是图纸中标出的。护边的加入让手机厚度达到了7.60mm。事实上，从iPhone 4一直到iPhone SE正面都会有这一圈护边的存在。 首先拉伸画出护边环 然后使用圆角特征加入细节，还原实机 电话听筒根据实机观察，电话听筒的图纸只标出了它的倒角外扩，实际上内部结构还有一个内陷，我们一点点还原它。 首先我们现在玻璃的下层画出听筒的实际大小和听筒的下陷。听筒的实际大小可以使用草图绘制中的等距实体。 正面玻璃画完听筒之后，我们就可以给模型覆盖上正面玻璃，这块玻璃会覆盖摄像头与光感，但是会露出Home键和耳机孔。首先使用转换实体引用将需要填充玻璃的部分画出来，Home键处选择一薄壁缝隙的外沿 然后选择草图中的各部分，拉伸凸台。注意在左边栏将“合并结果”的对勾√消去，这样拉伸出来的实体不会与之前画出的主体融合在一起。 然后我们将听筒的倒角特征加上 这样一块前面板玻璃就画好了 Home键如果你自己观察Home键结构就会发现它有三个特点 手指触摸的表面是一个弧面 再细看发现弧面下图案印在平面上，是一个类似于正面玻璃“镶嵌”的结构 经典的圆角正方形着色似乎与白色有分层效果 现在我们同样按照分层实现这个效果，首先与前置摄像头方法相同，我们画一个基准面 然后在这个基准面上，用一个草图将镶嵌层与透明层都画出来 使用下面的形状块将下层画出，注意轮廓的选择，以及不要勾选合并结果 然后使用分割线，将圆角正方形刻画在这个平面上 最后使用原有草图的上半块区域旋转出透明层，同样注意不要勾选合并结果。Home键就画好了。 正面的特征刻画完毕，我们来画侧面 侧面电源键电源键在图纸上只有凸起厚度，实际特征我们需要在实机上比对目测。首先我们先使用草图中的槽口工具画出电源键，并拉伸出来 然后使用同一个草图对电源键外侧薄壁切除一定深度，做出缝隙效果 最后根据实机图，我们给他加上倒角 静音拨码 &amp; 音量键根据图纸绘制出轮廓并拉伸出特征。由于拨码口圆角矩形图纸中没有，所以我们使用目测估计的办法画出深度合适的矩形口。 根据图纸给出的凸起画出拨码后，我们再次利用目测法给他们加上倒角。 观察发现，图纸标注的拨码位置为“静音”，拨码有红标注释，所以我们用分割线画上标记 利用草图槽口，我们画上音量键的“+”、“-“号 然后拉伸切除。注意这里为了实现效果，使用了拔模选项。拔模本意是指在拉伸过程中赋予主体的侧面一定的倾角，如果这个物体是通过注模成型，那么这个倾角会方便脱模取出。 ”-“键方法相同，这样音量键绘制完毕 卡槽由于以单一零件绘制不涉及卡槽拆装，所以这里我们只要求外观符合。首先使用槽口与薄壁切除画出外侧接缝 然后目测估计取卡针孔的大小拉伸出插针孔，卡槽就画好了 lightning接口 &amp; 耳机接口 &amp; 底部麦克风 &amp; 螺钉首先根据图纸画出底部接口所用的凹槽。切除深度可以参考接口的机械标准。这里我们简化一下，只画出柱状深口。螺钉可以用分割线画出进行简化。 然后进行两组麦克风的开口：在草图中选择“线性草图阵列”可以将单个的圆进行队列复制。 ↑需要注意的是，如果未勾选标注，草图阵列并不会自动加上尺寸约束。因此在阵列完成退出时，草图还是蓝的。因此在阵列结束后，我们需要通过额外约束限制草图。所有草图都必须完全定义！车队的制图任务有这一个标准。 切除麦克风口后，我们通过拉伸与倒角补完插口细节 最后我们通过草图圆周阵列与样条曲线进行拔模拉伸切除补完螺牙细节 ↑需要注意的是，这里因为样条曲线的复杂性，仅对于样条曲线类的制图没有上述完全定义的要求。通俗地讲就是只有样条曲线可以是蓝的。 通过阵列特征将螺牙复制到另一个螺钉上，底部绘制完成 最后我们绘制背面 背面iPhone 5的背面由三段构成，分别为玻璃板摄像头段，磨砂苹果标段，与玻璃板段。这两块玻璃板我们参考正面玻璃的绘制方法进行绘制。 首先通过切除与镜像特征画出玻璃背后的平面 摄像头 &amp; 背面麦克风 &amp; 闪光灯与正面相似，我们用分割线画出轮廓，分割后成为摄像头与闪光灯的金属外环 而后利用画前摄像头的方法，我们参考实机图片画出后摄像头复杂的层叠结构 然后拉伸切除出闪光灯与麦克风。麦克风的完整绘制方法与正面的听筒相同 最后我们给这两个面盖上玻璃，并添加倒角背面玻璃板部分就画好了 苹果Logo苹果标是由很多具有斐波那契数列关系的圆弧组成的。首先用整数半径的圆进行苹果标的作图。由于在一个草图上绘制，图形与约束非常复杂，大家在画复杂草图过程中不要做幅度太大的操作。每做一步先确认约束好了再画下一步，这样能够极大程度避免严重的定义冲突。尽量减小定义复杂导致图形画乱或软件崩溃的风险 第一个苹果标草图完成后，先使用另一个草图进行转换实体引用，再做缩放和移动操作，这样可以极大程度避免过于复杂的草图出现未知定义错误 天线使用分割线将苹果标画在背板后，再使用分割线画出侧边天线白条 至此，iPhone 5的建模部分全部完成 质量属性画完三维图纸后，我们应该赋予零件质量属性，这样零件就可以在装配的时候体现质量，整车质量也就可以进行准确估算。 质量属性菜单位于评估-&gt;质量属性 大家可以看到，质量属性功能可以根据零件密度计算零件质量，这是大多数机械零件的质量评估方法。 机械零件可以通过赋予零件材料属性，这样不仅可以输出零件的质量，还可以给零件附带材料属性，这样就可以使用SolidWorks插件进行简单的有限元分析 然而对于很多整体购买的装配好的电子元件，我们是以单一零件形式画图的，这样就不能通过密度计算质量。 所以我们就使用质量属性的覆盖质量属性选项，这样就可以直接设置材料的质量，质心位置，密度等信息。 iPhone 5的质量是112g，所以我们在编辑界面输入 点击确定后，模型就被赋予了覆盖质量属性了。 着色与渲染建模完成后，我们对模型进行上色。上色工具在SolidWorks外观选项中，相信大家已经有所了解。外观我就不做细节讲解了，大家参考我发的范例模型就能够明白。 模型的外观由颜色、纹理、光泽度、发光度、透明度等属性组成。在进行外观操作的过程中大家需要注意几点 着色面可以选择零件、实体面、曲面与特征等。大家需要清楚这些定义； 着色过程中对不同面的选择可以实现一些现实外观效果。譬如之前提过的Home键颜色的层次感。 由于不少电脑不能做到实时渲染，部分特征的点选过程可能看不清楚，大家可以灵活一点。比如先用看得清楚的颜色着色完再换为实际颜色。 SolidWorks自带有许多材质。大家在着色过程中可以开启PhotoView 360渲染工具插件通过预览查看着色情况，对着色做细致调整，力求真实。 上述操作的具体方法大家可以查阅网络资料，这里就不赘述了。给大家的范例模型是银色的，大家可以看下范例模型的着色方法以及渲染效果。 任务当然，作为一篇教程，最后给想学三维制图的同学布置一点简单的小任务： 不会做可以积极请教老队员哦（笑 【任务·简单】 参考实机（图片），将范例模型颜色更改为 iPhone 5 黑 跟随范例自主建模并着色，独立完成一台 iPhone 5 白 【任务·普通】 参考实机（图片）与图纸，将模型的Home键与后摄像头部分稍作改动，完成 iPhone 5s 深空灰 iPhone 5s 东北银 iPhone 5s 土豪金 iPhone SE 少女粉 【任务·困难】 参考实机（图片）与图纸，独立建模完成 iPhone 4 白 iPhone 4 黑 【任务·地狱】 画出自己的手机 尺寸精度要求不高，没有卡尺的同学可以用塑料文具尺测量，目测看不出明显的尺寸问题； 尝试称重，并赋予手机质量属性； 给模型加上外观，并尽量使渲染图接近实机； 画出你能力范围内能表达的所有细节，如果你愿意甚至可以画出碎屏的裂纹； 端着下图这种形式的照片夸一夸自己（笑 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>底盘组培训</category>
        <category>车身组培训</category>
        <category>2020寒假</category>
        <category>2020寒假</category>
        <category>SolidWorks三维建模</category>
      </categories>
      <tags>
        <tag>陈松格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第9讲_放电回路]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC9%E8%AE%B2_%E6%94%BE%E7%94%B5%E5%9B%9E%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 放电回路 当车辆断电后，电机控制器内的电容上的电荷无法被消耗，因此电容会一直带有300多V的高压，此时为驱动系统激活状态 在车辆断电时，需要一个电阻释放电容的电荷，是其电压下降，由此引入放电回路 放电回路由放电电阻和放电继电器构成 常闭继电器 线圈断电时继电器闭合，线圈供电时继电器断开 当安全回路接通，此时车辆上高压，线圈得到12V，继电器断开，电阻不接入 当车辆断电，安全回路断开，此时继电器闭合，电阻接入 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>整车电路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[电气组电路应用寒假培训阶段一]]></title>
    <url>%2F2020%2F02%2F%E7%94%B5%E6%B0%94%E7%BB%84%E7%94%B5%E8%B7%AF%E5%BA%94%E7%94%A8%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E9%98%B6%E6%AE%B5%E4%B8%80%2F</url>
    <content type="text"><![CDATA[寒假期间关于硬件电路(PCB)学习主要包括三个阶段： 阶段一：典型基本电路的了解及仿真练习：讲解内容主要涉及到仿真应用，通过仿真软件了解各基本电路的实现方式，不会涉及推导过程（本节内容只涉及到目前我们整车上面使用的一些基本电路，仿真软件可以选择Multisim或MATLAB）。 阶段二：根据大赛规则，了解学习当前整车硬件电路 （各个模块） 设计思路。学习使用AltiumDesigner软件，试着画出各模块的原理图。（可选）1、自己能根据电路原理图分析并画出逻辑流程图。2、有时间和能力的可以学习了解PCB板的绘制。 阶段三：（可选）如果大家有能力可以自己根据理解来将某一模块 (BSPD、TSAL、主板) 的电路进行仿真分析，验证自己阶段二学习过程中总结的电路逻辑。 需要提前了解三极管基础知识及Multisim的基本使用。本人能力有限若有错误的地方，希望大家能够及时指出，共同学习。 阶段一 电压比较器​ 大赛规则第2章12.9节中所描述的系统关键信号中的部分需要系统实时监测，且必须由硬件电子装置直接控制，不能使用软件及可编程装置控制。故选择电压比较器对关键信号进行检测。下图为电压比较器的电路图。 引脚编号 功能 8 VCC 3 + 输入端 4 GND 2 - 输入端 1 输出端 ​ 电压比较器是对输入信号进行鉴幅与比较的集成器件，它可将模拟信号转换成二值信号，即只有高电平和低电平两种状态的离散信号。图1为电压比较器电路图。常用的电压比较器应用电路有单限比较器、窗口比较器等。电压比较器可以看作是差模增益接近“无穷大”的运算放大器，只要同相 (+) 输入端与反相 (-) 输入端之间有无穷小的差值电压，输出电压就将达到正的最大值或负的最大值。 ​ 电压比较器的功能：比较两个电压的大小（用输出电压的高或低电平，表示两个输入电压的大小关系）：当”+”输入端电压高于”－”输入端时，电压比较器输出为高电平；当”+”输入端电压低于”－”输入端时，电压比较器输出为低电平； 目前比较器输出多为集电极开路输出级（后面会讲解，大家需要理解） 接下来将针对介绍两类电压比较器应用电路进行讲解 选取比较常用的电压比较器：LM393集成模块 ​ 上述图片为LM393集成模块实物图及内部电路原理图 单限电压比较器下图为单限电压比较器的Multisim仿真电路图 注：XSC1为示波器 ​ 仿真电路图中正反相输入电压都可通过滑动变阻器进行调节，当正相输入端电压大于反相输入端时，输出端输出高电平。同理小于时，输出端输出低电平。 ​ 为什么输出端要加上拉电阻？上面中我们说了当前比较器的输出端多为集电极开路输出，集电极开路输出一般多与上拉电阻进行相连(上拉电阻是上述仿真图中的VCC和5KΩ电阻与输出端连接部分)。 ​ 左图为LM393内部电路图 右图为集电极开路输出 ​ 上述图示表明LM393的输出为集电极开路输出，该输出只有两种输出状态（输出端三极管Q8的导通或截止，影响着输出状态，而正负相输入端的电平决定着输出端三极管Q8的导通状态），当正相输入端电压大于反相输入端时，输出端三极管Q8截止，三极管Q8集电极输出为开路状态（高阻态）；当正相输入端电压小于反相输入端时，输出端三极管Q8导通，集电极输出为低电平。 ​ 在输出端加上上拉电阻后。当正相输入端电压大于反相输入端时，三极管Q8截止，集电极输出端为开路状态，但是上拉电阻的存在导致输出端为高电平；当正相输入端电压小于反相输入端时，三极管Q8导通，VCC与电压比较器输出端三极管Q8构成回路，集电极输出端为低电平。此时就完成一个单限电压比较器的电路。 ​ 在实际整车电路中，我们需要对某个端口的电压值进行实时的监测，例如绝缘监测装置的状态输出，当输出电压Ui高于UR时，认为整车线路绝缘正常输出高电平，否则认为故障输出低电平。电路系统中采用单限比较器对该状态输出进行监测。 要求重点了解为什么LM393输出端需要上拉电阻？ 后续要求大家使用仿真软件（Multisim）进行模拟仿真实验，自由发挥验证。 双限电压比较器（窗口比较器）​ 单限比较器有一个特点，即Ui单方向变化(正向过程或负向过程)时，Uo（输出端电压）只跳变一次。只能检测一个输入信号的电平，这种比较器称为单限比较器。 ​ 双限比较器又称窗口比较器。它的特点是输入信号单方向变化(例如Ui 从足够低单调升高到足够高)，可使输出电压Uo跳变两次，其电路图及传输特性如下：（牢记LM393是集电极开路输出） 为方便描述，上下处的电压比较器分别称为C1、C2。 ​ 当输入电压Uin &lt; UR1时：C1正相输入电压小于反相输入电压，C1输出端三极管导通。C2正相输入电压大于反相输入电压，C2输出端三极管截止。由于上拉电阻存在，Uo输出为低电平。 ​ 当输入电压Uin &gt; UR2时：C1正相输入电压大于反相输入电压，C1输出端三极管截止。C2正相输入电压小于反相输入电压，C2输出端三极管导通。由于上拉电阻存在，Uo输出为低电平。 ​ 当输入电压UR1 &lt; Uin &lt; UR2时：C1、C2正相输入电压大于反相输入电压，输出端三极管都截止。由于上拉电阻存在，Uo输出为高电平。 UR1为下限电压，UR2为上限电压。 下面根据Multisim软件的仿真过程进行讲解： ​ 上图是双限电压比较器的仿真电路（基于软件Multisim），U1A的正相输入端电压为3.75V（上限电压），U1B的反相输入端电压为1.25V（下限电压），U1A的反相输入端和U1B的正相输入端通过滑动变阻器R6进行调节（输入电压Uin），图中输入电压Uin小于1.25V，故分析输出端电压为低电平，右侧是仿真示波器的界面，显示输出端电压为411mV。（411mV是三极管导通时，集电极和发射极之间的压降）。 此时调节滑动变阻器，使输入电压Uin电压值为2.5V，故分析输出端电压为高电平，右侧示波器的检测电压为4.9V。 同理大家可根据上述的仿真图，调节输出电压大于上限电压，进行分析验证。 （可选）网上了解学习关于线与的定义，进一步理解集电极开路输出（OC输出）实现线与的功能。 TTL集成门电路器件​ 首先了解门电路的含义：用以实现基本逻辑运算和复合逻辑运算的单元电路称为门电路。常用的门电路在逻辑功能上有与门、或门、非门、与非门、或非门、与或非门、异或门等几种（一般用到前面三个）。门电路大都是集成模块，目前使用到的有74ls04（与门）、74ls08（非门）等。我们只需要了解使用即可。 ​ 左图为74ls08集成模块 右图为74ls08内部电路原理图 ​ 提到逻辑运算必然涉及到逻辑‘1’及逻辑‘0’，在逻辑电路中我们视不同分段的电压值为不同的逻辑值。在TTL门电路中也有相应的定义。电平是个电压范围，TTL电平规定如下：输出高电平 &gt; 2.4V,输出低电平 &lt; 0.4V。输入高电平 &gt;= 2.0V，输入低电平 &lt;= 0.8V，噪声容限是0.4V。 ​ 为了验证TTL集成电路模块，采用Multisim软件进行仿真验证。下图为软件的仿真电路。 ​ 上述仿真电路TTL逻辑门电路两路输入电压为都为2.75V。故通过TTL电平标准，判断两路输入都为高电平，两路信号通过与门电路后输出电平为高电平（示波器B端口电压为5V）。 ​ ​ 接下来通过调节一路输入为低电平，验证门电路的输出电压。仿真电路如下： ​ 根据滑动变阻器的变化，得出R2输入电压没有变化，仍为高电平。R1输入电压值变为1.75V，故通过TTL电平标准，判断该路输入为低电平，故两路信号通过与门电路后输出电平为低电平（示波器B端口电压为0V）。 减法运算电路​ 在TSAL模块的逻辑策略中，电池箱内部继电器侧电压和箱外电机控制器侧电压需要实时监测是否相同匹配，由于上述电压位于驱动线路，其电压值较大，系统选取电压变送器将驱动线路的高压线性转换为1V ~ 5V范围内的低压。将转换为低压的两路电压通过减法运算电路来判断电压匹配状态。 ​ 集成器件模块选择LM358元件（两路运算电路） ​ 下图为LM358内部原理图 ​ 减法运算电路选取最常用的差分比例运算电路： ​ ​ 电路实现了对输如差模信号的比例运算， 输出电压Uo = Rf / R * (Ui2 - Ui1) ​ 下图为减法器运算电路仿真图及示波器显示图： ​ 由示波器XSC2得出正相输入电压为3.727V，反相输入为2.500V，由推导公式得出Uo = Rf / R (Ui2 - Ui1) = 2.454V，由示波器XSC1得出输出端电压为2.46V，故成立。 ​ 注意：① 由于LM358的驱动电源VCC输入为5V，故输出电压最大值不会超过VCC，即使Ui2 - Ui1 &gt; 2V后，输出电压仍会为4V。（实际情况可能会有所偏差，最好可以自己验证）② 当Ui2 - Ui1 &lt; 0V时，输出电压一直为0V。大家可以自己设计新的减法器运算电路验证。 继电器模块​ 主要介绍5脚继电器模块、8脚继电器模块（电磁继电器）。 ​ 上图分别列出了八脚及五脚继电器的集成模块和内部电路原理图（5脚继电器原理图后续要使用） ​ 什么是继电器呢？这个东西很常见，在电子设备以及电力系统中的应用都很广泛，简单的来就是一种用小电流来控制大电流的开关。小电流通过线圈，产生磁场，这个磁场使得控制大电流的开关吸合。从而使得人们能够安全的超控大电流大电压设备。电磁式继电器一般由铁芯、线圈、衔铁、触点簧片等组成的。只要在线圈两端加上一定的电压，线圈中就会流过一定的电流，从而产生电磁效应，衔铁就会在电磁力吸引的作用下克服返回弹簧的拉力吸向铁芯，从而带动衔铁的动触点与静触点（常开触点）吸合。当线圈断电后，电磁的吸力也随之消失，衔铁就会在弹簧的反作用力返回原来的位置，使动触点与原来的静触点（常闭触点）吸合。这样吸合、释放，从而达到了在电路中的导通、切断的目的。对于继电器的“常开、常闭”触点，可以这样来区分：继电器线圈未通电时处于断开状态的静触点，称为“常开触点”；处于接通状态的静触点称为“常闭触点”。 ​ 继电器模块的内部结构一定要熟记于心，接下来根据上面集成模块的原理图来分析5脚继电器模块。继电器由线圈工作的控制电路和触点接通电路两个部分组成。在线圈两端（图中为A、B两端）加上电压或通人电流，产生电磁力，当电磁力大于弹簧反力时，吸动衔铁使常开常闭接点（3端口为常闭，2端口为常开）动作，常开触点与公共端（1端口）闭合，常闭触点（2端口）与公共端断开；当线圈的电压或电流下降或消失时衔铁释放，触点恢复原状态。 8脚继电器模块类似，多出了一组触点接通电路。下面针对继电器仿真电路进行分析。由于继电器线圈的驱动电流需要20mA - 50mA，线圈电阻100-200欧姆，因此需要添加驱动电路，仿真电路选择三极管驱动。 ​ ​ 在Multisim软件中，继电器模块就是K1（EMR011A09），其中左侧是线圈，右侧是触点。解释各个元件的作用：D1 1N4007是整流二极管，当三极管截止后，D1可为线圈产生的反向电动势提供回路，防止其他元件的损坏（当三极管导通，线圈工作时可将D1视为断路，不予考虑）。R1、R2都是限流的作用，防止三极管及发光二极管电流过大而损毁。R3的作用为了使三极管截止状态更加可靠。整个电路的思路如下：按钮Key的通断决定着三极管Q1处于导通还是截止状态，当Key按下时，三极管基极与发射极压降增加，三极管Q1导通。继电器线圈线路导通，产生电磁力，使得常开触点与公共触点闭合，线路中的LED1进入工作。当按钮回位时，三极管基极与发射极压降为0，三极管Q1截止，LED1。继电器线圈在三极管关断的瞬间产生反向电动势，通过D1释放电能。 ​ Multisim中继电器模块和实际使用的模块并不完全一致，但原理相同。大家有兴趣的话可以对该电路可以改进，通过添加发光二极管实时显示线圈导通与否，注意发光二极管的正向导通压降为1.7V左右，正常工作电流大于10mA，需要添加限流电阻配合工作。 延时电路RC延时电路​ 系统对部分关键信号需要进行延时处理，最简单常见的应用电路就是RC延时电路。由于在电容两端加上电压时，电容会不断充电至所加的电压值，利用电容的充电时间来进行信号延迟。 ​ 系统在BSPD模块中使用的RC延时电路，来确定信号的可靠性。当相关信号输入时，RC电路中电容开始充电，信号持续一定时间后，电容侧两端电压电压将会增加至输入信号电压值，确定信号可靠。若信号中间中断，则会导致电容放电，电容两端电压下降，判定为非可靠信号。 ​ 下面对仿真电路图进行分析： ​ R1与多个并联电容构成RC延迟电路，R2的作用是为了当按钮Key断开时为电容提供放电回路。当按钮按下时，VCC输入进来，此时可以视为整车某一关键信号的输入，对电容进行充电，示波器是示数可以看出，当接近1S时，电容两端的电压为2.1V（达到TTL输入高电平，TTL门电路认为信号产生了），此时就完成1S的延迟功能。 NE555定时器​ 在规则中熄火电路必须保持断开状态直到对低压系统主开关重新上电，或者 BPSD 可以在上述断开条件消失且持续 10s 以上时自行复位。10s的延迟时间，可采用555定时器实现。只需要了解标准电路应用即可。 ​ 下面根据仿真图来验证： ​ 上图采用了NE555定时器的单稳类应用电路，RST脚功能是直接清零端。当此端接低电平，则时基电路不工作，此时不论TR、TH处于何电平，时基电路输出为“0”，正常工作时应接高电平。DIS脚放电端，延时电路不用。THR、TRI分别为低触发端、高触发端。CON一般连接0.01uf电容与地相连。 该电路的特点是当Key未按下时，Uout = 0V处于稳态；当Key按下时，Uout电压值会瞬间达到VCC，处于暂稳态。只有当Key恢复后，且持续T = 1.1 R2 C2 时间，Uout = 0V会再次进入稳态。通过调节电阻和电容的型号，满足当BSPD断开信号消失10S后才进行复位的要求。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>硬件电路</category>
      </categories>
      <tags>
        <tag>王士淳</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第8讲_电压变送器，电压比较器]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC8%E8%AE%B2_%E7%94%B5%E5%8E%8B%E5%8F%98%E9%80%81%E5%99%A8%EF%BC%8C%E7%94%B5%E5%8E%8B%E6%AF%94%E8%BE%83%E5%99%A8%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 TSAL认为驱动系统激活的三个条件 任何一个AIR闭合（主正主负闭合其一） 预充继电器闭合 电池箱外的电压达到 60 V DC 电控侧电压变送器 直接连接电控两端 防止HVD断开后，无法检测电控的电压 电压变送器将高压电转化为低压电—将60VDC转化为1.48V，当信号线的电压大于1.48V，灯红闪 电压比较器 当输入大于阈值，输出高电位；当输入小于阈值，输出低电位 实现将模拟量（电压）转化为数字量（0或1） document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>整车电路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第7讲_HVD，能量计]]></title>
    <url>%2F2020%2F02%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC7%E8%AE%B2_HVD%EF%BC%8C%E8%83%BD%E9%87%8F%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 高压断开装置 如果两个AIR都发生粘连，那么由于无法接触到电池箱内部，会发生高压无法断开的风险 在车外，放置一个易于接触的，百分之百能断开高压的装置 HVD分为插头插座，插座的两根螺柱连接高压线，当插头插座结合时，螺柱通过两个铜牌（插头）导通，当插头插座分离时，两个铜牌一定不会导通。 5.8.5 必须能够徒手移除 HVD。因此一个辅助接触点/互锁应当在 HVD 被移除的时候断开安全回路。 能量计 计算赛车的电能消耗，效率测试所用 能量计是赛会组委会下发的，以保证公平 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>整车电路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第6讲_预充回路，上电逻辑]]></title>
    <url>%2F2020%2F01%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC6%E8%AE%B2_%E9%A2%84%E5%85%85%E5%9B%9E%E8%B7%AF%EF%BC%8C%E4%B8%8A%E7%94%B5%E9%80%BB%E8%BE%91%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 预充回路 电池直接连接电控的电容，此时变为一阶RC电路的充电响应求解 电流达到三万多安培，会烧毁元器件 解决办法：增大串联电阻，此时电容两端电压缓慢上升，电流缓慢下降 又因为电阻会耗散电池的电能，做无用功，因此需要①串联电阻限流②在大电流放电时，断开该电阻 上电逻辑 ①闭合主负继电器 ②闭合预充继电器，等到电容两端电压与电池电压相近时，断开预充继电器，同时闭合主正继电器 6.7.1 需要设计电路保证在闭合第二个电池箱绝缘继电器之前，中间回路电容的电压值达到了电池箱 电压的 95％。因此中间回路电容的电压必须被测量。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>整车电路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简介-如何科学地飙车]]></title>
    <url>%2F2020%2F01%2F%E7%AE%80%E4%BB%8B-%E5%A6%82%E4%BD%95%E7%A7%91%E5%AD%A6%E5%9C%B0%E9%A3%99%E8%BD%A6%2F</url>
    <content type="text"><![CDATA[相信刚刚加入车队的新老司机们肯定多少开过车子，这篇文章紧接着上一篇比赛介绍，想给大家简单地总结一哈飙车的科学原理（捂 这篇文章主要是想向大家介绍赛车的一些基本常识。我不知道大家之前对赛车有多少了解，所以我会尝试非 常 细 致地介绍赛车驾驶的有关内容。文字比较啰嗦比较小儿科，大家轻喷哈（笑 飙车的基本技巧这一段我们主要谈谈竞速赛的飙车方法，想让大家对赛车手的开车方法产生一个感性的认识，帮助大家理解一些飙车的方法。 赛车线我们知道，除了直线加速赛和单纯的转弯测试，一条回环的场地赛道或是一条点到点的拉力赛道都是由直道与弯道组成的，那么如何在这样一条赛道中用最少的时间走完全程呢，相信基本不需要思考大家就能得到如下的答案： 在通过赛道的时候选择尽可能短的路线 用尽可能快的速度通过每一段赛道 这两种方案我们应该如何选择呢，我们举个栗子吧 这是株洲国际卡丁车场的航拍图，让我们截取一个赛段 停，放大，再放大以后，我们首先画出通过这一段的最短路线 可以看到，这条路线是由简单的直线与紧贴着赛道内侧的定半径圆弧组成的（画图渣。如果赛车的速度始终不变的话，这条线就是理论上通过这段赛道的最快路线了。 HOWEVER，常识告诉我们，赛车在行驶过程中速度是不可能不发生变化的。赛车能够在直道上达到很高的速度，但是如果在弯道中依然尝试用很高的速度行驶的话，就会发生转不过弯的情况。所以实际上我们在开车转弯的时候，都会经历一个高速直道-刹车-低速转弯-重新加速的过程。 发生这种情况的根本原因应该不难理解：如果把汽车转弯理解为平面上的匀速圆周运动的话，赛车转弯所依靠的向心加速度全部由轮胎与地面之间的静摩擦力来实现了。 F=\frac{mv^2}{r}经验告诉我们，车轮与地面之间的摩擦力是有限的，所以当我们尝试使用这条最短路径过弯时，过小的转弯半径使我们不得不大幅减速。为了得到更高的过弯速度以及出弯速度，我们尝试将转弯半径尽量拉大，于是我们得到了赛车过弯时使用的外-内-外过弯路线。 看到这里，可能会有同学产生疑惑：为了一点速度优势多走了这么多距离，怎么就更快了呢？ 在考虑转弯线路时，加大转弯半径虽然在转弯过程中发生了时间损失，但是实际赛道是由直道段与弯道段组合而成的，更高的出弯速度带来直道加速段的初速度优势会在长距离的直道中不断累积，从而产生总体上的时间优势。与此同时，由于弯中速度的提高，入弯前的刹车段也将变的更短，刹车幅度更小。拉大半径提高速度在实际场景下还能够获取更大的空气动力学效应，更低的轮胎磨损等优势。所以总而言之，当今的赛车手都是使用这样的线路通过弯道的。 最终在整合了上述因素后，我们就得到了组合弯道目标行驶路线了。 可以看到，并不是所有弯道都会按照外-内-外的规律规划路线。这是因为在赛道上许多弯道是连续组合的，我们知道我们之所以要提高弯中速度是为了尽量提高出弯后的直道速度，从而获得总体的时间收益。因此在连续弯道路线规划中并不会全部严格按照外-内-外的规律，而是将弯道路线综合考虑组合方式，最终才得出一条赛道的理想路线。 除此之外，赛车的性能，赛道的路面，天气变化等现实世界中的变化也会对路线选择产生影响。当然，这些内容不在这篇文章的讨论范畴，我就不废话了（捂。 [中字] 关于弯角你需要知道的一切 【弹幕中字 Chain Bear F1】搞懂赛车线！ - “红色烈火拖拉机” 中字翻译 驾驶课程-初级课程 [赛车行驶路线] 路线选择只是上赛道前要做的第一步，赛车在赛道上是怎样沿着既定的路线形式的，这就是我们接下来要讨论的话题。 抓地力能够改变赛车速度和方向的力，全部来自于地面和赛车轮胎之间的摩擦力。具体而言，在赛车完全按照预定轨迹行驶的过程中，轮胎与地面之间的纵向“静摩擦力”改变速度；侧向“静摩擦力”改变方向。 这里的“静摩擦力”并不是严格意义上的静摩擦力，而是形容赛车在按照轨迹行驶时，车轮应该是完全滚动摩擦。实际上赛车轮胎的运动非常复杂，使用“静摩擦”来类比可以比较浅显地解释一些现象。 比如有”静摩擦“就会有”滑动摩擦“。 当赛车速度过快，轮胎能够提供的最大侧向摩擦力不足以抵消循迹需要的惯性离心力时，赛车就无法循迹，产生向弯道外侧的滑移。换句话说，一台赛车的轮胎能产生多大的侧向摩擦力，这决定了赛车能用多快的速度通过弯道。这就是赛车的转弯时能够达到的极限速度。 同样的，当赛车加速或刹车时，赛车会对轮胎施加转矩。而轮胎通过摩擦力使赛车加速或减速。当这个转矩过大，轮胎就会出现空转或是抱死。而轮胎在纵向能够提供的最大摩擦力决定了赛车能够有多大的加减速能力，这就是赛车加速与刹车的极限。 一台赛车的极限速度受到很多因素的影响，悬架调校、四轮定位、路面质量等等很多因素都会对赛车的性能产生巨大的影响。努力提升这个极限速度，就是车队的工程技术团队的核心任务。 驾驶课程-初级课程 [抓地力] g值圆一般在描述赛车行驶受力的时候，我们使用更好测定的加速度表示。以重力加速度g为单位，赛车向任意方向受到的加速度被除以g表示出来，比如赛车过弯时受到1.2倍重力加速度的向心加速度，我们就描述为1.2g。这种描述方法十分常见，相信大家都不陌生。 描述赛车在地平面上的运动受力我们一般使用叫做g值圆的图表。这种图表类似于极坐标，使用同心圆来表示加速度的量，使用不同的方向角来表示方向。使用这种图表我们可以实时了解到赛车的受力情况，还可以直观地将赛车的极限表示出来。 本田思域Type R 纽北破纪录实况 在远古时期，穷苦的赛车手用不上加速度仪表时，智慧的劳动人民就想到过一种指示加速度的替代办法——水杯。 如果你明白了赛车为什么存在极限速度，想必你也就能够很自然能够明白赛车就是一项游走在极限上的运动。那么现在我们来看一些极限的情况吧。 转弯的极限众所周知，赛车有前轮和后轮(废话)，如果把它们分开来看的话，它们都会有各自的极限。越过极限的一侧轮胎失去循迹能力，就会向弯道外侧滑移。 转向不足(Understeer)是前轮比后轮先失去循迹能力的情况。在这种情况下，赛车无法随着前轮的指向移动，而是会因为惯性指向弯道外侧。所以车手会感觉无论怎样向扭动方向盘，赛车都无法随着指向转弯。转向不足也被俗称为“推头”。为了改出这种情况，需要车手减速，以至于速度降低至前轮抓地力能够承受转向要求的离心力作用，而恢复循迹。 驾驶课程-初级课程 [转向不足] 转向过度(Oversteer)是后轮比前轮先失去循迹能力的情况。在这种情况下赛车的尾部会因为惯性离心力的作用甩向弯道外侧，因此也被俗称为“甩尾”。这种情况出现时，赛车会因为惯性自然地指向弯道内侧，甚至出现打转的情况。当这种情况出现时，车手除了需要减速，一般还需要反打方向使前轮指向正确的行驶方向。如果这种动作操作得当，车手就能控制后轮滑行的幅度，并以甩尾的姿态通过弯道，这就是所谓“漂移”。 驾驶课程-中级课程 [转向过度] 在正常的循迹驾驶过程中，这两种情况的出现就意味着赛车失去控制。但实际上因为赛车轮胎的运动特性非常复杂，这两种情况经常并不是瞬间出现的，而是随着速度的变化逐渐产生。所以大家可以看到在一般情况下车子虽然发生前轮或后轮的滑行，但是依然具有一定的循迹能力。 【66熟肉】推头和甩尾的区别，你真的懂吗 转向过度或是转向不足除了描述上述现象，更多地是用来形容一台赛车转弯时容易出现的运动趋势，或被称作赛车的弯道动态特性。因为这种情况的出现与前后轮的极限有关，所以这种特性是可以通过调校改变的。一台调校得当的赛车在正常操作下，可以出现前后轮同时达到极限的情况，赛车可以很轻松地跟着方向盘的转动转弯，这样调校的赛车就被认为具有中性转向特性(Neutral)。一般这种调校的赛车会被认为是将抓地力潜力发挥到极限的。但是赛车特性的决定因素与许多因素有关联，现实中几乎不可能做到完美。市面上调校赛车或是调校所有汽车时，都会将汽车调校成具有轻度转向不足特性，因为转向不足现象只需要减速就可以改出，相比转向过度具有绝对的安全性优势。 刹车的极限在进入弯道之前，赛车一般需要减速从而循迹通过弯道。这时，赛车的制动能力就显得非常重要了。一个迅猛的制动快速降速，能够尽量缩短刹车距离，拉长制动前的全速路段，从而获得时间优势，学过积分的同学们一定不难理解这一点。那么问题来了：什么样的刹车动作是一次优秀的刹车呢？ 我们知道，制动的机械过程就是通过人脚踩下制动踏板，从而利用杠杆与液压放大作用将踩踏力转化为对制动盘的夹紧力，利用制动盘与刹车片之间的摩擦来给车轮施加制动力矩，最后通过轮胎与地面之间的摩擦力实现赛车的减速。 轻踩下踏板时，车轮的制动力矩不够抵消地面对车轮的静摩擦力产生的力矩，于是赛车缓缓地减速，减速度的大小就与人踩踏踏板的力正相关。 当踩下踏板的力达到了一定大小，踏板被踩到了一定深度，此时车轮的制动力矩增大，以至于能够与车轮与地面摩擦力产生的力矩相抵消，车轮就会发生抱死现象。这时制动盘与刹车片之间静摩擦，无论如何增大踩踏力度，车轮与地面之间都会保持滑动摩擦状态，赛车减速度基本稳定在了这个滑动摩擦力提供的减速度上。 那么把车轮踩到抱死的刹车是一次优秀的刹车吗？不是。 滑动摩擦力并不是车轮能够提供的最大摩擦力。在实际环境中，滑动摩擦力会略小于最大静摩擦力。 无论前轮还是后轮先发生锁死都意味着失去循迹能力，赛车的减速轨迹会高度不可控。前轮锁死会发生严重转向不足，赛车会笔直地沿着前进方向惯性移动。后轮锁死则会有转向过度的可能，若操作不当使赛车受到侧向力，赛车则会直接在制动过程中发生甩尾打转且极难救车。 车轮与地面的滑动摩擦会严重磨损车胎。车胎在摩擦后还会引起轻微的车轮失圆，这个失圆产生的振动如果一不小心对上了某些共振频率还会引起更大的麻烦(比如颠掉前翼)@歪头 所以说车轮抱死的刹车不仅不优秀，反而是最糟糕的一种情况。 优秀的刹车同样与轮胎极限有关。一个优秀的赛车手能够将刹车控制在车轮转与不转的边缘，车轮与地面间已经不完全是滚动摩擦，但仍然保持旋转，因此仍然具有一定的循迹能力。这就是临界刹车。这种技术在没有防抱死系统(Anti-lock Braking System)的方程式赛车上有很高的操作难度，因为需要很精确的踩踏力度控制。最优秀的刹车与最糟糕的刹车之间也许只有一张纸的距离。但这种细致的控制技术也是赛车运动魅力的来源(之一)。 AMG驾驶学校 第2集 [刹车基础] 驾驶课程-初级课程 [刹车技术] 驾驶课程-初级课程 [临界刹车技术] 循迹刹车了解了临界刹车，我们现在来了解一种更为极限的减速操作 我们在描述赛车抓地力时发现赛车的抓地力被分为了纵向与侧向分力。实际上的轮胎受力应该是这两个分力的合力。这个合力转化为加速度，就可以被g值圆表示出来。同样的，赛车能够循迹行驶的极限加速度，也是由侧向极限与纵向极限合成的。这个合成的极限表现在g值圆上，应该是一个近圆形。 在极限的操作下，一个优秀的车手在入弯时由减速进入转向的过程中，可以一直保持赛车处于极限边缘。也就是说，在减速状态与转向状态转换过程中，一个优秀的车手是可以做到“转弯与制动同时进行”的操作的，这就是循迹刹车技术。 相比只在直线路段刹车，能够做到循迹刹车的车手无疑拥有更强的速度控制能力。循迹刹车技术也能够在复合弯路段中充分利用赛道长度进行减速，最大化利用赛道中的加减速距离。但是相必大家已经能够从上文的描述中看到这种刹车操作的难度。刹车技术是赛车中最重要的单项技术之一，能够在刹车与转向的复合加速度变化中准确把握赛车的极限，用身体感受动态过程中的加速度变化，勤奋的练习和天赋都非常重要。同时作为工程师，我们也必须要理解这种技术的存在。 加速的极限说完转向和刹车，我们来了解最后一个控制赛车的基本操作——踩油门。 刚刚在讲刹车的时候提到：如果对轮子加上过高的转矩(比如制动力矩)以至于突破了轮胎与地面之间的最大静摩擦力，轮胎和地面之间就会发生滑动摩擦。所以反过来也是一样的，当驱动力矩过高的时候，车轮就会发生空转。 那么这个驱动力矩在什么时候会大到引发车轮空转呢？ 我们在高中时有做过汽车启动过程中最大加速度与最大功率有关的题目，我们知道在输出功率较低的区域，或可以理解为车速相对较低的区域开始加速的过程中，赛车能够输出非常大的驱动力。这一点在电动车上可以很容易地感受到。如果在低速时深踩油门，就会使赛车瞬间向驱动轮输出非常大的驱动力矩。这时如果赛车动力足够强劲，这个力矩就会使驱动轮发生空转。 如果起步时驱动轮发生空转，赛车起步反应时间会受到很大的影响，导致落后于人。后驱车起步甚至有可能发生偏航与旋转，一不小心画出一个甜甜圈。 想必大家看到这里已经能够理解为什么起步与出弯阶段会成为油门控制的难点了。起步与出弯阶段都是赛车从低速状态开始向全力加速变化。如果油门踩踏过深，就会导致驱动轮极限被突破。而在两侧驱动轮进入滑动摩擦状态后，它们与地面之间的摩擦力就基本完全取决于地面摩擦系数了。万一出现左右摩擦力不均而在两侧驱动轮之间出现力矩，就有很大的可能导致赛车偏航。 所以完美的出弯加速与循迹刹车道理相同，当输入更大的油门时，转向就应该做出相应的回正，让赛车尽量保持在轮胎的极限范围上。 如果在弯中或是出弯时踩深了油门，还会因为驱动形式的不同产生不同的结果。 前驱车：前轮抓地破坏，发生转向不足。 后驱车：后轮抓地破坏，发生转向过度，甚至原地画圈。 四驱车：四轮抓地破坏，赛车向弯外侧偏离，高度失控。 头哥卡丁车甜甜圈 现在我们说完了油门，刹车，转弯这三大开车基本操作中可能遇到的极限情况了。如果完全明白了以上的内容，你就已经基本掌握了赛车运动的基本规律了。在此基础上，我们说点有意思的，比如围场中火药味最浓的部分： 超车在多车竞技的赛场上，能够实现名次上升的最直接有效的办法就是超越。如何不断超车以至于赢下比赛，我们从最简单粗暴的开始讲吧。 开一台跑的更快的车 赛车场上决定名次的最重要因素是车！ 不要试图怀疑上一条的正确性！车手技术再好赛车上限不高也没用！ 其实上一条的后半句反过来也适用@法拉利。 开86的拓海是无论如何也赢不了开奔驰的叔叔的！ 开86的拓海是赢不了开法拉利的舒马赫的！ 赛车是烧钱的运动！氪金不一定使你变得更强！但不氪金只会被时代抛弃！ 所以最简单的超车办法就是： 老子直道比你快 气不气？ 弯道超车的规则了解完最简单粗暴的直道超越，我们回到现实（笑。一般赛车比赛由于规则限制，不同车手的赛车之间虽然或多或少存在动力差距，但一般只有火星车与慢车之间会出现直道超越。不少赛事还有明确的功率限制。所以在现在的赛车比赛中大量的超车发生在弯道中。那么在了解大量的弯道超车之前必须了解一些弯道超车的规则。 众所周知，赛车存在碰撞体积（废话。所以如果没有规则的限制，跑在前面的车手是可以将跑在后面的车手阻拦住，或是将它们挤出赛道的。所以一般多车齐跑的赛车比赛，都会对线路做出很大的限制，以保证赛车手的安全以及赛场和谐。一般约定俗成的内容大致为： 赛车在直道上进行超越时，被超越车不能恶意挤撞超越车，不能在后车逼近时通过反复变线(画龙)恶意阻拦。 赛车在弯道争抢过程中，一般当两车侧面范围有重叠，它们就有义务在弯道中互相让出赛车线。比如： 当超越车在入弯时成功插入被超越车的内侧弯道，被超越车就不可以向内线挤压迫使超越车驶离赛道； 当超越车在出弯时成功进入被超越车的外侧弯道，被超越车就不可以向外线挤压迫使超越车驶离赛道 一般赛车所有车轮驶出赛道边缘白线视为驶出赛道。 如果通过不合理手段(碰撞、切弯)超越，则有义务将位置归还。 看明白这些基本规则，我们就可以开始讲一些操作方法啦。 进入内线首先是相对最好理解的内线超越。内线有更短的转弯距离和更快的过弯速度，能够在入弯时进入前车内线就会有很好的超车机会。切入内线主要有以下几种方法： 尾流提速 赛车在行驶过程中会受到空气阻力极大的影响。如果能够在直道或是加速路段进入前车正后方区域，就可以利用前车破风效果跟上前车获得直道末端的速度优势，通过突然抽头变线进入内线。 驾驶课程-中级课程 [尾流超车] 延迟刹车 延迟刹车是更普遍被使用的技术，通过延后刹车点并更加剧烈地减速使赛车获得短暂的速度优势以进入内线。但是想必大家对上面的刹车章节还有印象，延迟刹车需要良好的车况，熟练的技巧以及高度的自信。 当然，进入内线的超车是一项比较容易进行防守的技术。领先的赛车也可以通过延迟刹车，甚至提前占领内线的方式进行防守。 外线超车外线超车利用的是大半径转弯带来的速度优势。当你能够在弯中并排占据外线，更快的速度会使你在直道上超越对手。外线超车相当考虑车手对赛车侧向极限的把握以及出弯油门的控制。在顶级的赛场上利用车况以及轮胎优势的外道超车也是非常常见的，甚至领先车会让出内线位置，利用更宽的过弯路线来获得出弯后的速度优势进行反击。 组合弯的博弈在一些车况相近，车手水平相近的情况下，一次成功的超车也许会需要长期的缠斗。这个缠斗的具体内容，就是在多弯组合的赛道上复杂的线路博弈。弯道线路的取舍，延迟刹车的程度，都会成为决定胜负的一部分。 【弹幕中字 Chain Bear F1】超车的艺术：里卡多在中国的制胜之道 【弹幕中字 Chain Bear F1】防守的艺术：巴库超车中的成与败 维斯塔潘咊勒克莱尔ポ及緻嘚輪對輪攻防戰 | 2019英慖大獎賽 说回FSAE最后我们还是应该回到大学生方程式的部分。毕竟作为教育导向的比赛为了学生安全，将赛车简化为了桩桶赛道与计时赛的形式。3米宽的桩桶赛道省略的复杂的车线选择，禁止超车的耐久赛规则也极大限度避免了安全事故与财产损失。将比赛的重心更多地向赛车的工程设计转移。当然作为一个实打实的方程式赛车比赛级别，FSAE有它自己的参赛要领。 如果你是一个工程师，你应该充分地明白赛车的优化重点，帮助赛车提升极限： 增强动力是一台赛车最本质的优化方式。动力系统（电池、电控、电机）不管放在哪个级别的赛车上，都是成本最高，需要投入最多精力的部分。可以说动力决定了你的赛车在围场中的排名范围，所有的设计都是从动力系统的选型开始的。 更轻的质量是在整个设计过程中贯彻的。更轻的质量意味着更快的提速降速转弯，更小的机械极限负荷，也意味着更高的成本，更高的设计难度与更细致的流程控制需求。可以说，轻量化是所有赛车的工程追求，也是一支车队技术水平与管理水平的综合体现，尤其是在没有质量下限的FSAE围场。 更好的人机工程实际上是最有效的提升手段。无论是在机械上进行专项优化，还是利用复杂的电子系统辅助。大学生方程式不存在顶级的车手与成熟的工程师。无论是利用技术辅助车手感知极限，降低操控难度；还是利用技术帮助工程师读取数据，简化维护步骤。都是变相提升赛车速度的重要方法。 可靠性是体现性能的基础！在利用理论知识提升赛车理论极限时，不要忘记赛车绝非一堆模型和数据，而是实打实的工业产品，需要经历多变的实际工作环境的考验。一台不能坚持到比赛结束的赛车，甚至一台无法通过车检的赛车是没有成绩可言的。 如果你是一个车手，你应该明白能够提升驾驶能力的要素，包括但不限于： 更细腻的驾驶技术。感受刹车与油门踏板细致到蝉衣厚度的变化并控制它，感受方向盘受到地面颠簸的微小转动并控制它。细腻代表着更逼近极限与更小的失误； 更强健的身体。强健的体魄意味着能够在更大的加速度变化中保持操作的细腻与头脑的清醒，这需要极强的核心力量与心肺功能。赛车运动也是一项耐力项目，如果你的体力坚持不完体测长跑，那么你甚至恐怕会在长时间的驾驶后脱力扭不动方向盘； 勇气。当你敢于将赛车推向失控的边缘，毫无疑问你会变得更快。（莽 赛车运动之所以特别，是因为它从来不仅仅是对车手个人的身体力考验，更是对团队综合实力的考验。越是高水平的赛车比赛，车手就越需要做到如机械般的细腻敏感与稳定持久。整个团队一环扣一环，每一环都同样重要。 最后扯皮emm就这些内容是关于赛车的非常非常基本的知识，所以想让车队所有人都能够在脑子里对赛车这个东西有个基本的概念，以后不管是做什么方面的开发都会有自己的小目标，能够在自己心里把车子该有的样子刻画出来，能够顾及到车队整个团队做子系统之间的配合吧emm 当然关于车子的底盘机械空气动力学之类的这篇肯定是顾及不到的emm一个是这篇就想写面向全体队员的内容然后其他的细节我后面会像梁师傅一样散装往上传的emm 我自己其实19年整年做下来虽然都有顾及到但是都是学艺不精这样的一个状态，本身专业也不是机械底盘这类emm所以后面一些细节内容我会尽量写我知道的emm但是特别细致的东西应该是要交给下一届以后更有时间精力做子系统的同学研究了emm我尽力帮助大家入门然后少走弯路吧emmm document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>简介</category>
        <category>底盘组培训</category>
        <category>车身组培训</category>
        <category>2020寒假</category>
        <category>2020寒假</category>
      </categories>
      <tags>
        <tag>陈松格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第5讲_辅助触点的目的，TSAL入门]]></title>
    <url>%2F2020%2F01%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC5%E8%AE%B2_%E8%BE%85%E5%8A%A9%E8%A7%A6%E7%82%B9%E7%9A%84%E7%9B%AE%E7%9A%84%EF%BC%8CTSAL%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 辅助触点的目的，TSAL入门 规则6.6.1的目的 防止继电器粘连 无法通过声音来判断电池是否对电控供电 由此引入 驱动系统激活指示灯（TSAL) TSAL 5.10 驱动系统激活指示灯（TSAL） 5.10.1 赛车必须有一个 TSAL 用于指示驱动系统的状态。TSAL 不允许执行其他功能。一个 TSAL 中允许包含多个 LED 灯。 TSAL指示驱动系统内是否存在高压电 当主环顶部的TSAL指示灯红色闪烁时，表示驱动系统已经激活。 5.10.2 当下列情况中中满足任何一个都视为驱动系统处于激活状态：有一个 AIR 闭合；预充电回路 工作； 电池箱外的电压达到 60 V DC 或 25 V AC RMS。这意味着即使在 HVD 被移除的情况下， TSAL 也要能够检测所有直流母线电容器的电压。 存在高压的情况：①当两个AIR闭合时，箱外一定存在高压，又因为两个AIR闭合时，至少有一个AIR已经先行闭合，此时规则认为驱动系统已经激活。 辅助触点帮助TSAL判断AIR是否闭合 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>TSAL</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第4讲_整车工作原理]]></title>
    <url>%2F2020%2F01%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC4%E8%AE%B2_%E6%95%B4%E8%BD%A6%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 整车工作原理 6.6 电池箱隔离继电器（AIRs） 6.6.1 每个电池箱中都必须至少有两个电池箱隔离继电器 当安全回路导通，继电器线圈高侧得到12V;当电池无故障，继电器线圈低侧得到GND信号，此时AIR导通，车辆正常上电工作。 继电器 两根螺柱：主触点，高压电流流经 线圈两根线：一根给高电位（12V),一根接地，主触点就吸合 辅助触点两根线：当主触点吸合时，辅助触点两根线相互连通 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>整车电路</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第3讲_动力电池续]]></title>
    <url>%2F2020%2F01%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC3%E8%AE%B2_%E5%8A%A8%E5%8A%9B%E7%94%B5%E6%B1%A0%E7%BB%AD%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 串联增加电压，并联增加容量/功率 总能量=22Ah \times 80 \times 3.7V=6.512kWh=6.5度电 规则解释 6.3.2 每个电池组最高电压不超过 120VDC，最大能量不超过 6MJ（1.67kWh），能量计算方法见第 五章 6.1.3。 每个模组的能量=16 \times 4.2V \times 22AH=1.47kWh 6.4.4 要使用维护插头使内部电池组在电气上分离。电池箱内所有电池组的 正负极都必须可以实现分离，包括第一个和最后一个电池组在内的所有电池组的两极。 开箱之后，做任何操作之前，拔掉所有的维护插头，使得电池组在电气上隔离。 9.2.3 无论何时，一旦电池箱被打开，电池单元（cell segment）必须用维护插头分开，参见第五章 6.4.4。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>电池</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第2讲_动力电池介绍]]></title>
    <url>%2F2020%2F01%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC2%E8%AE%B2_%E5%8A%A8%E5%8A%9B%E7%94%B5%E6%B1%A0%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 目的三电系统 电池 电机 电机控制器 动力电池分类 软包 (我们使用) 圆柱形 (18650) 方壳 模组 (Pack)电池单体 (Cell) 的串并联 电池重要参数电压电流容量 Ah 1Ah=1000mAh=1A \times 1h 能量 kWh (度) W=Fx=mgx 能量=容量 \times 电压 20Ah \times 3.7V=74Wh 2020赛季电池参数 单体电压 3.7V 模组形式 16串 5模组串联=80串 单体容量 22Ah 总能量 $22Ah \times 80 \times 3.7V=6.512kWh=6.5度电$ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>电池</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020电气组寒假培训第1讲_绪论]]></title>
    <url>%2F2020%2F01%2F2020%E7%94%B5%E6%B0%94%E7%BB%84%E5%AF%92%E5%81%87%E5%9F%B9%E8%AE%AD%E7%AC%AC1%E8%AE%B2_%E7%BB%AA%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[您的浏览器不支持video标签 目的高压 低压 (安全回路) 软件 (单片机) 资料 规则 技术检查表 ESF document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
      </categories>
      <tags>
        <tag>梁洪豪</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[fury教程系列]]></title>
    <url>%2F2020%2F01%2Ffury%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%2F</url>
    <content type="text"><![CDATA[fury历年教程整理 培训 简介-大学生方程式是一个什么样的赛车比赛 简介-如何科学地飙车 电气2019 一些单片机基础概念 嵌入式与C-侧重调试 python速成-python图像处理体验 2020 2020电气组寒假培训第1讲_绪论 2020电气组寒假培训第2讲_动力电池介绍 2020电气组寒假培训第3讲_动力电池续 2020电气组寒假培训第4讲_整车工作原理 2020电气组寒假培训第5讲_辅助触点的目的，TSAL入门 2020电气组寒假培训第6讲_预充回路，上电逻辑 2020电气组寒假培训第7讲_HVD，能量计 2020电气组寒假培训第8讲_电压变送器，电压比较器 2020电气组寒假培训第9讲_放电回路 2020电气组寒假培训第10讲_测量点，DCDC 2020电气组寒假培训第11讲_行程传感器，低压主开关 2020电气组寒假培训第12讲_制动可靠性检测 2020电气组寒假培训第13讲_绝缘检测装置 2020电气组寒假培训第14讲_电池管理系统 2020电气组寒假培训第15讲_急停，惯性，制动超行程开关 软件使用文档编写Markdown Markdown安利&amp;Typora简要使用教程 3D建模SolidWorks SolidWorks2016安装包及安装教程 SolidWorks2018安装包及安装教程 电路板绘制Altium Designer AD 09安装包及安装教程 AD5小时快速入门 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
  </entry>
  <entry>
    <title><![CDATA[简介-大学生方程式是一个什么样的赛车比赛]]></title>
    <url>%2F2020%2F01%2F%E7%AE%80%E4%BB%8B-%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%96%B9%E7%A8%8B%E5%BC%8F%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%B5%9B%E8%BD%A6%E6%AF%94%E8%B5%9B%2F</url>
    <content type="text"><![CDATA[写这篇文章想为大家简单的介绍一下大学生方程式大赛设置的比赛项目和技术发展趋势，希望大家看我能够对比赛有一个简单的概念性的认识吧（笑 大学生方程式是一个什么样的赛车比赛呢大学生方程式（下文简称FSAE）比赛不同于纯粹的商业化竞速赛车比赛，比赛将参赛车队设定为一个独立的赛车制造公司，比赛的评估项目在竞速之外还有对于整个团队在运营管理水平的量化评比。可以说是一个建立在真实汽车企业情境背景下的大型工程竞赛。 因此，参赛车队作为一个独立运营的赛车公司，它们需要在一年的赛季中完成以下任务： 制定完整的赛车产品的商业计划 设计并制造出一辆符合赛事规则要求的赛车原型车 完成车辆量产化的制造方案并进行成本评估 除了这些比赛规定的项目，在车队的正常发展的过程中，一个车队也一定需要面对这些问题： 如何解决过程中各种各样的绝境bug 如何制定短线与长线发展策略 如何根据车队生存环境制定财务计划 如何寻找赞助爹 如何制定企业品牌与文化运营策略（队徽队服，团建活动等） 如何在领导面前吹牛[高雅] 等等 因此，加入车队对同学们而言可以得到一个接近真实企业的工作经历，随着车队的壮大，还可以切身地体验技术型企业的发展历程。是不是很期待（媚 关于“比赛想要考察的内容”同学们应该都有了解过目前大学生能接触到的比赛，相信不少的同学们也了解过赛车比赛，FSAE项目作为一个整合以上两个关键属性的比赛，在世界范围内已经形成了独立的成熟的比赛定位和规则体系。同时与所有比赛相同，面向大学生比赛的科研与工程教育性质永远是第一位的。 看完上面的的内容大家应该能够对这个比赛的内容产生了一个基本的概念。这个比赛在相对于纯粹的赛车竞速比赛，更加考验的是学生车队的设计水平与管理水平。相对于其他小队规模的工程实现比赛，这个比赛的无论从学科整合性，时间跨度还是规范性要求上都更高，更大，更长。相比于应变能力，更需要参赛同学形成长期良好的工程习惯，才能拿到更好的名次。 比赛情境完全模拟了社会上大部分技术企业的发展过程与工作环境，这也让大学生方程式项目成为有别于其他工程研发类比赛的高门槛项目。不仅是对人员技术与管理水平的考验，还是对学校财力的考验（捂。好了不吹了，请大家在参赛过程中慢慢体验吧（捂 世界范围内的FSAE比赛目前在世界范围内共有包括美英德在内的约20多个国家与地区举办油车，电车，无人车分开评比的赛事。并且根据地区的不同形成了以德国赛规则驱动的欧洲地区比赛、以国际赛规则配合地方规则驱动的亚太和北美地区比赛。中国赛规则是赛事组委会与规则委员会为了匹配国内学校研发实力，因此将两份规则进行翻译后整合，并加入地区适应性规则形成 北美亚太地区与SAE国际赛规则北美作为全世界最早开展FSAE比赛的地区,经历了从木板车到单体壳的发展过程。但是目前北美地区的车队顶尖水平不及欧洲地区。北美与亚太地区多使用美国赛会Formula SAE发布的赛事规则（简称“国际赛规则”），这套规则在美国、澳洲、日本韩国等地使用，地区赛会配合国内研发水平进行一定的地区规则调整。国内顶尖学校已经能够参加日本赛并取得非常不错的成绩，日本赛成绩也会慢慢成为正在进步的国内学校所追求的目标 Formula SAE Formula SAE Japan -Monozukuri Design Competition 欧洲地区与FSG德国赛规则以德国赛为首的欧洲地区是目前世界上工程研发能力最强的地区。围绕德国地区的很多学校依托其强大成熟的加工技术，高超的理论设计水平，以及学校与大型企业给予的有力经济与政策保障，使大量欧洲车队能够做到顶尖技术的掌握。同时依托欧洲成熟的赛车文化，欧洲地区的车队拥有一年多站的比赛机会。欧洲地区使用的FSG规则（简称“德国赛规则”）与国际赛规则目前大同小异。目前国内顶尖学校已经能够在政策支持下参加德国站比赛并跻身地球组。德国赛也成为了世界上不同国家的车队同场竞技的平台 Formula Student Germany 中国赛与中国赛规则中国赛油车赛始于2009年，电车赛始于2013年，无人车赛始于2017年。中国赛在世界范围内起步较晚，但依托近十年来国内经济高速发展的技术积累与顶尖学校的大量投入，目前的中国赛与中国车队已经有一定的技术水平。中国赛规则由两个国际规则的翻译整合，也慢慢形成了符合中国实际情况的赛事规则。但是中国赛在赛事流程规范性方面仍不及国外赛会，所以参加外国赛事仍然是目前中国车队的目标。因此我们要在适应地区特色的基础上努力做到规范自律，技术上实事求是，问心无愧，以实现国际规范为目标 中国大学生方程式汽车大赛 比赛规则与比赛项目规则赛事规则是方程式比赛的核心，包括F1在内所有的方程式赛车比赛都有明确的技术规则对赛车形式进行限定，并在赛前进行严格的技术检查以保证赛车符合条例。 FSAE中国赛规则由以下部分组成： 第一章 管理规定 描述比赛进行的流程与管理条例。 第二章 通用技术规范 对于赛车的车架、车身、悬架、转向、传动、冷却、空气动力学套件等基础设计进行技术限制。 第三章 替代车架规则 有别于常规车架结构，组委会允许对钢管车架进行高度自由的设计，但是无法满足常规要求的车架设计需要提交额外的认证报告才可以使用。 第四章 内燃机车规则 针对油车动力系统的安全性做出的技术限制。 第五章 电车规则 对于电车动力系统的安全性做出的技术限制。 第六章 静态项目规则 第七章 动态项目规则 我准备用一篇专门的文章向大家粗略介绍下读规则的方法，在这儿就只要知道规则很厚很细节就好啦（笑 2020中国赛规则 (答题版) 2020国际赛规则 2020德国赛规则 车检赛车在拿到动态赛的参赛许可之前必须通过全部的车检以证明赛车满足比赛的规则要求。车检的内容（电车）包括： 车手逃生测试 所有参赛车手需要在5秒之内从座舱完全逃出赛车，未能完成的车手不允许参加动态比赛 机械检查 对于规则第二章所描述的机械规范进行检查 电池箱检查 对于电池箱机械与电气设计工程规范性进行检查 通电检查 在机械检与电池箱检通过之后方可安装电池箱，进行整车高低压通电检查，以验证系统可靠性。 侧倾测试 车辆停靠在侧倾台架上侧倾60°不能出现车轮离地与液体泄漏，验证赛车的侧向稳定性。 淋雨测试 电车测试项目，电车上电后进行120秒全方向淋雨测试，以验证赛车电气绝缘性。 制动测试 赛车在短暂加速过后需要在制动过程中所有车轮抱死方可通过测试，以验证赛车制动系统可靠性。 动态练习测试 赛车需要通电并在规定场地内自由行驶180秒无异常，验证系统的可靠性。 想必大家都明白通过车检是一辆赛车取得比赛成绩的基础。然而需要注意的是，车检仍然是包括我们在内的车队参加比赛所遇到的第一大考验。遵守规则条例并最终成功通过车检对于由大学生组成的车队而言，是一项从基础设计阶段开始知道加工制造乃至车检进行时都需要保持细心，保持坚定的工作任务。看似简单的车检要求中隐藏着无数需要注意的细节。花费一年时间斥巨资打造的赛车因车检未通过而无法取得动态成绩抱憾而归的车队不在少数。因此这里特意将车检单独列作一项比赛项目。 在通过上述检查并完成动态赛后，赛车还将接受部分项目复检，以验证赛车可靠性。再次强调规则与车检是所有技术类工作需要面对的问题，也是一整年参赛过程中大量矛盾的来源。 比赛文件参赛队伍需要在赛季内规定的ddl之前提交比赛要求的一些文件，有些文件用于车检，有些计入静态项目分数。它们包括但不限于： 商业逻辑方案 SES*结构等同性表格/**SRCF**结构要求证明表* IAD*前端缓冲结构数据要求* 成本报告 设计报告 设计参数表 ESF*电气系统表* FMEA*失效模式及影响分析* 如果不能按时提交，技术检查文件将会影响车检，而计分类文件会在总成绩上扣除罚分。迟交同样有扣分处罚。 此外还有比赛要求提交的验证性文件，比如参赛人员名单等等。 赛车设计赛车设计（Engineering Design）是一项评估赛车技术水平的静态项目，分值为150/1000。赛车设计项目要求车队提交一份有篇幅限制的设计报告用来简述赛车的技术特点。并且在比赛期间进行设计答辩来详细阐述赛车的设计理念并回答裁判的问题。项目的评分采用概念排名分制，即150分会按照裁判统一标准进行排名化计分。 需要大家认识的概念是：赛车设计项目中的设计亮点展示固然重要，但是得到高分更重要的是对于赛车及其子系统的透彻认识，并在这些理论基础上使设计思路与设计目标有明确的逻辑关系，有能力展示数据，向裁判充分展示思路的逻辑完备性，而非一味夸大吹水而无法自圆其说。 成本与制造分析成本与制造分析（Cost and Manufacturing）是一项评估赛车制造成本与参赛团队成本分析能力的静态项目。分值为100/1000，为多项分项目的组合分数。其中包括： 总成本评分 20分 最低成本比例换算后的排名分 现场陈述 40分 答辩与成本报告的准确性评估 案例分析 40分 解答比赛现场发布案例分析题目 成本与制造分析项目要求车队完成并提交一份完整的物料清单（BOM）以按照标准描述赛车制造流程的材料，工序等项目的成本。并且车队在比赛日现场会参加成本答辩，阐述赛车制造工艺，并现场回答“案例分析”问题。 可以看出，在成本报告的评分中，能够得到高分的队伍并非纯粹追求低成本或是高性价比思路。成本项目最重要的得分点其实是统计的准确性与所提出制造方案在逻辑上的合理性，与设计报告一样，只有成本计算准确，过程严谨并且对制造工艺有着清晰的认识才能得到成本报告的高分。 营销报告营销报告（Business Plan Presentation）其实我更愿意称之为商业报告。为什么要特意称其为商业报告是因为该项目的考核重点实际上是对于车队制定的商业计划的评价，而不是金牌销售卖车吹水大会。得到高分的参赛队伍应该能够在展示商业营销方案的基础上，提供足够的数据以支持商业计划的合理性（比如市场调研），从而达到吸引投资方（裁判）的目的。营销报告的分值为75/1000，采用现场打分换算排名分的形式。 可以看到，三个静态项目的考核重点都不是简单的亮点展示，而是需要有完整的内容支持。每一项内容支持都明确地对同学们的竞赛态度有要求：严谨完整，规范细心。大家应该要认识到这是FSAE对于参赛同学长久不变的要求。 静态项目到此为止↑，动态项目现在开始↓ 直线加速直线加速（Acceleration）为赛车加速能力测试，赛道长度75m铺装路面。分值为75/1000，计分模式为排名换算分，公式为： 3.5+71.5\times\frac{\frac{全场最快圈速}{计分车圈速}-1}{1.50-1}可以看出完赛车队能够得到3.5分，而圈速在不低于全场最快圈速150%的车队将获得比例换算的得分。同时公式第二段下限为0，即最快车能够得到75分，后续车队得分递减至3.5分。 目前在世界范围内火星组车队已经能够做到3.2s，中国赛最好成绩在4s上下。 当然AMZ当年一秒五零百电车是电机80kw限功关掉以后做出来的 8字绕环8字绕环（Skid Pad）为赛车定圆弯能力测试，赛道为两个定半径圆组成赛道，并计算左右方向最快单环时间取平均。 项目分值为50/1000，计分模式为排名换算分，公式为： 2.5+47.5 \times \frac{\frac{全场最快圈速}{计分车圈速}-1}{1.25-1}公式意义与直线加速是一样的，在此不赘述。 高速避障高速避障（Autocross）为单圈计时赛，赛道形式为1km左右长度的桩桶赛道，赛道平均宽度3m，由不同半径组合弯，蛇形绕桩与短直道组成，平均速度控制在40km/h上下（地球组）。 项目分值为150/1000排名分，公式为： 7.5+142.5 \times \frac{\frac{全场最快圈速}{计分车圈速}-1}{1.45-1}公式意义不再赘述。 耐久测试耐久测试（Endurance）与效率测试（Efficiency）同时进行，体现在流程上为22km耐力赛，即使用高速避障的赛道进行多圈耐力赛，比赛中途需要更换车手来完成前后半段各11km的跑圈。 耐久赛分值为300/1000排名分，公式为： 50+250 \times \frac{\frac{全场最快圈速}{计分车圈速}-1}{1.50-1}该公式意义不再赘述。在此基础上，未能完成耐久赛全部里程的车队将获得 20 \times \frac{车队完成圈数}{耐久赛总圈数}的耐久赛得分。 效率测试效率测试（Efficiency）测试赛车的能效情况，通过在赛车上安装赛会发放的电池能量计计算赛车在耐久项目中的能耗情况，并结合圈速计算效率分值，并对效率分值进行排名分。效率测试分值为100/1000 由于目前中国赛规则并没有给出电车使用的计算公式（无奈），这里给出德国赛规则使用的计分公式： 100 \times \frac{\frac{0.1}{计分车效率因子}-1}{\frac{0.1}{全场最高效率因子}-1}其中效率因子为： \frac{全场达成完成效率测试队伍的最快圈速 \times 最快车耗能^2}{计分车即时圈速 \times 计分车耗能^2}因此，对于未达成效率测试要求的车队，同时在国际赛规则中未能达到最快车圈速133%范围的车队，将会得到0分的效率测试成绩。 意义可能有偏差，看不太懂的可以自行查阅国际赛规则。 大学生方程式前沿技术趋势随着技术进步，现在的大学生方程式赛车已经吸收了大量高级别下放技术，这里主要想让同学们了解一下世界上的顶尖水平，认识差距(捂脸。不过在认识差距的同时也不应该妄自菲薄。不同的客观环境（比如资金）决定了不同的车队必然会有不同的极限与解决方式，能够尽力做到最好的车队才是NB车队。多多了解，追求极限吧。 以上漂亮话↑，接下来是一些热门的关键词与链接，大家自行查阅吧。。 赛车：寻找大学生方程式的极限 2018 - 曾奕凯的文章 - 知乎 FSAE空力原理（续）：空力野兽TUFast分析 - MedinC的文章 - 知乎 文献综述（伪） - 大学生方程式级电池管理系统 - 曾奕凯的文章 - 知乎 大学生方程式汽车大赛 - 知乎 【FSAE】非簧载式尾翼设计 #大学生无人驾驶方程式大赛 #四电机 #碳纤维单体壳 #主动悬架系统 #多功能方向盘 结尾扣题：希望大家看完这篇文章能了解到这个比赛的运作形式与现在在世界上的影响力，找到自己在车队里的方向和目标，帮助自己提升技术水平，也帮助车队早日踏上火星组的竞争舞台（想[高雅]吃） document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2020寒假</category>
        <category>简介</category>
        <category>底盘组培训</category>
        <category>车身组培训</category>
        <category>2020寒假</category>
        <category>2020寒假</category>
      </categories>
      <tags>
        <tag>陈松格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[fury资料整理]]></title>
    <url>%2F2019%2F12%2Ffury%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[fury车队历年资料整理 杂大赛规则 2018中国赛规则(第一版17年12月05) 2019中国赛规则(第二版19年04月29) 2019中国赛电气部分规则修订要点 2020中国赛规则(12月03答题版) 2020德国赛规则(v1.0) 2020国际赛规则(v2.1) 技术检查表 2017版 2018版 2019版 (电气部分) 官方规则解释 2019中国赛电气部分规则修订要点 2019FSE电检详解 底盘 减速箱电机防松证明 (图片) 电气 Design and Development of the Electrical Systems in an Electric Formula SAE Race Car 电气系统表 2019电子科大FSEC电气系统表 2019ESF编写Review 2019ESF审核表格 电芯 瑟福能源12075200SH15电芯规格书 瑟福能源12075200SH15电芯测试报告 电机 2013-2015各车队电机数据统计 EMRAX 208 电机使用说明书4.5版(英文) 电机使用说明书4.5版(中文) 电机控制器柯默K2-H38 柯默电动K2电机控制器规格书H38M38 - V4.0 电池管理系统科列BMS 科列技术BMS技术手册V5.10 2019FSEC科列BMS程序调试指导手册 2019FSEC标准原理图 2019BMS科列标准指导资料(压缩包) 充电机杭州铁城3.3KW_HK-J系列 充电机用户手册 绝缘检测装置 本德尔IR155-3203/3204规格书 永贵高压连接器 永贵YG757规格书 永贵YG959规格书 永贵YG1052手动维护开关规格书 能量计 2017能量计规格说明 电气安全培训2018 充电安全 整车电气安全 整车调试安全 电池安全知识 2019 车队电气安全知识普及 三电系统技术分享 2019湖南大学三电系统分享 车身行政 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
  </entry>
  <entry>
    <title><![CDATA[python速成-python图像处理体验]]></title>
    <url>%2F2019%2F02%2Fpython%E9%80%9F%E6%88%90-python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%BD%93%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[车队以后的方向肯定是无人车, 会在软件方面下许多功夫, 比如需要研发一个导航系统.虽然因为 性能问题这个系统里最要求算力的部分还是会用C++之类的写, 但python作为一门胶水语言还是很有 可能会用到的. 又比如我现在为显示屏做的这个交互系统用一个python框架做的. 另外我个人也很喜欢 python (因为写着简单), 总之学一下没坏处啦😁. 如果你不适应看教程文档想看网课, 我推荐 计算机科学和Python编程导论（自主模式）. 部署开发环境🌟 文章一些术语或者细节也许你看完这篇之后也完全弄不懂, 但别丧气, 用着用着你就能 懂了. 我一开始也是完全不懂. 部署, 指的就是布置, 开发环境指的是用来开发程序的各种零零碎碎的软件, 设置等等. 具体到此处就是说安装python, 安装python的包管理工具, 安装好用的代码编辑器, 安装本次任务 所需要的依赖库. ⚠ 我为了说明我们到底要做什么分开说明的, 但其实这是一套流程, 并不是分开的. 操作并不算太麻烦💪 python代码工具的安装Anaconda基本信息 Anaconda是一种Python语言的开源发行版，用于进行大规模数据处理、预测分析，和科学计算，致力于简化包的管理和部署. Anaconda使用软件包管理系统Conda进行包管理.(摘自维基) 比较难懂,看了也可能不知道什么意思. 对其中几个概念解释一下: 开源是开放源文件的意思, 开源是计算机领域十分提倡的一个理念, 现在你只 需要知道开源的东西肯定是免费的. 发行版即是指这是一个python大礼. 里面有 一些对数据分析很有帮助的工具, 因此号称用于数据处理等方面. 用于数据处理等方面也很容易看出来. Anaconda就是 Analysis conda的缩写 (我这么觉得的) 包管理指的是管理各种包, 也就是库. 包究竟是什么我们在 后面结合具体例子比较好解释. 你也可以看 维基百科 (如果满篇英文看着 头痛右键翻译为中文) conda一个很好用的包管理工具, 值得一提的是conda并不只是python的包管理工具, 还 可以管理R, Ruby, Lua, Scala, Java, JavaScript, C/ C++, FORTRAN等语言的包. 另一个 很著名的Python包管理工具是pip, 也就是Python现在自带的包管理工具. 但要注意的是 ⚠混用pip和conda有时候有危险, 参见这里. 通过后面对包的介绍我们能看出Anaconda的包管理是一个多么方便的功能. 这样安装能节省很多时间 和精力, 而且你可以配置出想要的任意环境. Anaconda已经预置了科学计算相关的许多库, 很多做 机器学习, 图像处理的人也很喜欢这个的. 也就是说Anaconda是一个免费的安装各种库特别方便的Python数据分析大礼包. 因为Anaconda的官网的服务器在外国, 我们直接去官网下载会十分缓慢甚至极有可能失败, 因此 我们在Anaconda的清华镜像 或者Anaconda的中科大镜像下载安装包. 截至2019年2月16号两个网站上的最新版本均是3-5.3.1, 因此直接拉至页末下载Anaconda3-5.3.1 开头的, 对应你的电脑系统的安装包. 比如你是Windows平台x64架构, 点击 Anaconda3-5.3.1-x86_64.exe. ⚠ Anaconda官网下载页面提供自带Python为3.7和2.7两个版本, 这两个 镜像站提供的是python3的版本. 实际上这无关紧要, 你想换的话下下来之后也是可以换的. 但我推荐 默认python环境为python3, 想用python2可以再建一个环境. 现在你可能看不太懂这什么意思, 稍后的内容会解释. 安装指导具体的我就懒得说了, 这个安装教程 ⚠ 有一点要注意, 在安装过程中会询问是否安装VSCode, 推荐选择安装. 免得以后你 想用VSCode写python了还需要配置. 如果在此处选择安装, 你打开VSCode就可以拿来写python. 你可以通过在命令行中输入conda来检测是否安装成功. 如果未成功会告诉你: 1'conda'不是内部或外部命令，也不是可运行的程序或批处理文件。 而如果安装成功了你会看到一大串东西. 内容介绍 Anaconda Navigator是Anaconda包管理功能的体现. 在这里你可以管理你已经安装了的包, 你可以新建环境. Spyder是Anaconda中包含的IDE, 当然你也可以用别的, 比如pycharm, 但Spyder也很好用. ⚠Spyder默认使用的是root环境的python, 如果你新建了环境, 你需要在Anaconda Navigator中重新安装一次Spyder, 但别担心, 并不是从网上重新下一遍. Jupyter是一种交互式笔记本, 具体可以参考 这个 VSCode是微软出品的编辑器. 要注意编辑器和IDE是不一样的, 不装插件的话它就是个打字 用的, 并不能运行程序. 编辑器之所以强大是因为可以装很多各种各样的插件, 有很广泛灵活的 用途. 我现在最经常用的代码工具就是VSCode. 更换国内源正如前面提到的, 因为资源所在服务器离我们非常远, 下载包的速度可能十分慢, 因此我们将镜像源 换为国内源. 实际这种方式很常用, 比如国内的Ubuntu系统(一种Linux系统) 使用者大多也会更换 Ubuntu国内源. ⚠ 据说清华的镜像源崩了 (虽然安装包还能下), 因此最好用中科大源. 在中科大的Anaconda源使用帮助中有 说明. 如果你还是不确定怎么做, 参见 知乎-添加Anaconda国内镜像源-中科大镜像源. ⚠ 他说的下载scrapy就算了, 我们暂时用不到. 你可以试试 这几个 Visual Studio Code虽说我日常使用VSCode, 但它的优势更多体现在广泛灵活小巧. (小巧是指我开VSCode一点就开了, 而我开Spyder要等半分钟😁) 因此VSCode拿来做前端开发极其合适, 写点小代码, 写段算法 也很不错. 但要处理图像这种比较大的数据还是用Spyder比较好, 尤其是在开发阶段. 我在这里 说处理图片就算比较大的数据是说一张图经常是几百乘几百的矩阵, 而且经常是三维的, 在VSCode中 打断点查看一张图的矩阵时无法很直观的看出各个位置的数据, 而在Spyder中会用一个带颜色的表格 很直观的体现数据. 另外VSCode中一次程序运行结束后刚运行的变量数据等不会留下, 会被清空. 当然VSCode也有一些很好用的调试方法, 但现在大家不必用. 因此我建议大家这次任务还是用Spyder完成, VSCode可以慢慢研究研究. PyCharmPyCharm是JetBrains推出的python IDE. Jetbrains出品的一系列软件也相当出色, 比如它的C/C++ IDE Clion也是好评如潮. JetBrains的这一套软件是对学生免费的, 如果你有兴趣可以上网 搜索安装方法. 安装Python的OpenCV库等库Anaconda安装好就已经自带scipy, numpy (也可能没有numpy来着?) 等很常用到的包. 那么什么是包呢我在此举个例子来说明包是什么. 包也可以叫做模块, 库, 恰好硬件中也有模块这个概念. 以 这种蓝牙模块为例, 如果 要我做一个实现蓝牙功能的电路我掉光头发可能能做出来, 但我只需淘宝一下就可以用这个蓝牙模块 搞定, 甚至还有细心客服为你解疑答惑. 这就是使用模块的好处. 既然你需要的功能别人已经做出来 了你何必浪费时间与头发去做呢?更何况别人做出来的功能可能你掉光头发都做不出. 在软件方面模块, 也就是包的应用更加极致, 我们比较常听说的OpenCV, TensorFlow等等其实都是包. 要注意 包不是python独有的概念, 甚至OpenCV既有python的包也有C++的包. 各种语言基本都有包管理工具, 相对于C/C++来说我觉得python的包管理工具便利了太多. 即使C++有vcpkg这样的包管理工具, 但 很多时候还是需要很多手动操作. 而在python下想下什么包一句pip install 什么什么 或者 conda install 什么什么就搞定😁 Anaconda的好处在此处我来具体谈谈Anaconda的好处. 当我们需要安装一个包 (A) 的时候我们可能会看到提示说你要 安装的这个包有依赖于另一个包 (B). 然后你可能一层层找上去半天才安装完. 但使用anaconda的话 conda会直接把你要安装的包和它依赖于的包统统安装好. 特别轻松愉快!👏 另一大好处就是利用Anaconda我们可以创建彼此分离的python环境. 此处的环境指的是包括python 解释器, 各种包在内的这一套东西. 之所以我们称之为环境我觉得是因为程序都需要一个具体的运行 平台, 而这些东西决定了我们的程序针对的平台, 所谓一方水土养一方人, 叫环境也是比较贴切的. 举例来说我们可以创建一个python2的安装了scipy等科学运算的库的环境放在Linux系统做数据挖掘 用, 我们也可以创建一个python3的安装了TensorFlow的环境来研究机器学习. 要知道有的包相互 冲突, 因此能建立相互独立的环境是很好的. 开始安装找到Anaconda Prompt这个东西. 这其实是一个特殊的命令行. 在其中输入以下命令安装numpy库. 1conda install numpy 输入以下命令OpenCV库. 1conda install opencv 现在在Anaconda Prompt中输入python来激活python解释器, 输入以下命令来引用opencv库 1import cv2 要注意如果什么也没发生才是对的, 如果出现了 1Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt;ModuleNotFoundError: No module named 'cv2' 那才凉. 这是说没有找到叫cv2 (也就是opencv) 的库, 说明你安装失败😁 为了本次任务这两个库就足够了. 至少我的程序只用到了这两个库. ⚠ 最好使用conda来安装而不是pip. pip安装包和conda安装包的格式不同, 混用有 可能出问题. conda比pip在包管理方面做的要更省心, 但conda的包没有pip里的多, 有时候同一个 包在两个工具中的名字也不同. 具体可以参考这个 总之只要conda里有的包最好用conda安, 没有才用pip安. 有时候pip安装一些包会失败, 但我还没 见conda安装失败过. 相关知识提要python开发python开发的好处python代码运行起来是公认的慢, 比如可以看这里. 虽然也许他的实验方法不那么严谨但这也部分体现出了python比C慢许多. 但为什么仍然有很多人在使用python甚至用python写嵌入式平台的代码呢? 知乎-Python 是慢，但我无所谓这篇文章虽然有点 极端但能够说明大致的问题: C/C++等静态语言的指针, 变量类型等等会涉及一些比较麻烦的东西, 很容易让人发昏, 因此开发速度无法提起来, 要打的字也多. 而python很多时候显得十分高级, 能够 用一句话实现C/C++用十几行都实现不了的东西. 很著名的梗就是用C/C++打印出Hello World至少 要4个语句, 而python只需要一行. 另外因为python是解释型语言, 在各平台间移植比C/C++容易太多. 因此python十分适合用来实验代码, 修修改改那种😏 这也是为什么随着机器学习火起来 python也火了许多: 做机器学习就得对代码这修修那改改才能试出来😁 因此有许多追求开发速度的组织会先用python研发出系统后面再用C++重写 一次系统, 这样一来既有开发速度, 程序也不会有运行速度的问题. python2与python3python很有意思的一点是python2和python3虽然都是python, 但这两个版本之间的语法是有差异的 比如python2下的打印Hello World是 1print 'Hello World' 而在python3中则是 1print('Hello World') 因此当你从网上抄了一段代码报错了你应当查看一下你是不是抄错了版本😏 但由于python2在已经被广泛使用了许久, 很多很著名很有用的包都是用python2写的, 因此现在并 不是python2快要被淘汰了的情况, 甚至Linux系统默认安装的python是python2. 很常见的两句shebang语句 有的python代码第一行写的#! /usr/bin/env python是什么? 虽然这是一句注释, 但同时它也是一句shebang. 这句虽然是以注释的形式表达, 实际上是在指出使用的python解释器. 但它基本是Linux系统下用的 /usr/bin/env是在Linux系统的根目录下的usr (即user) 文件夹下的bin (即binary, 二进制文件. 但这个文件夹中可能并不止有二进制文件) 文件夹下的env (环境变量设置). 具体参见这里. 不同python解释器的不同之处在于他们的python版本和环境. 比如我们写了一个python3的程序, 但Linux的默认python解释器的版本是python2, 如果我们想在命令行调用这个程序的时候不需 指定它所使用的python版本, 就可以利用#! /usr/bin/env python这样一句注释来指明. 虽然我们在Windows下也可以用这种方法指定要调用的python版本, 但#! /usr/bin/env python 这样的东西在Windows下是毫无意义的. 至于网上各种代码里经常出现这句我猜是装逼用的. 有的python代码第一行或者第二行写的# -*- coding: utf-8 -*-是什么? 这是在指定这行注释所在文件的编码格式. 我们都知道编码格式有许多种, 如果我们不指定文件 的编码格式而文件被以错误格式保存了, 假如你的程序中有中文, 那么程序中很大概率会出现乱码 了. 要注意这句shebang需要写在文件的第一行或者第二行才有用. 但其实我们一般设置编码格式 是在我们用的IDE或者编辑器中设置, 基本也就是Linux用户等拿命令行什么的编程的最需要用这个 😏 其他疑问上网搜索好啦. 总之我们在Windows下写python几乎是用不到这两个语法的. ⭐ 上述两个语法在PEP (python增强建议, 是人们制定出来的让大家的python代码都 很规范的标准) 中的说明页面是以下两个, 有兴趣可以看一眼. PEP 263 – Defining Python Source Code Encodings PEP 397 – Python launcher for Windows 利用OpenCV库进行图像处理✔ 为了帮助大家完成此次任务我给出一些值得参考的链接: 基础知识 常见图片格式详解 [图像的四种类型及简述](https://blog.csdn.net/r_w_zhang/article/details/78475812 RGB与HSV⚠ 需要注意的是在opencv中彩色图片的三个通道是以BGR的顺序来的, 也就是说 对于一个图像image的某一个像素点image[x, y]来说, image[x, y, 0]是蓝色通道的值, image[x, y, 1]是绿色通道的值. ⚠ OpenCV中的HSV与标准的HSV 有一点区别. Python-opencv 图片颜色域的识别选取 【opencv+python】图像处理之一、颜色空间RGB,Gray与HSV 滤波软件中滤波这个概念比硬件中的滤波这个概念要宽泛得多, 只要给这个函数输入一个信号它能筛选 信息那这个函数就是一个滤波器. 一般我们在开始对一张图像做处理时, 第一步是对其进行平滑处理, 比如使用高斯滤波. 这样能够 降噪. 降噪究竟有没有效果也许你可以看看这个 -高斯模糊的原理是什么，怎样在界面中实现？ 浅析“高斯白噪声”，“泊松噪声”，“椒盐噪声”的区别 开闭运算 Python OpenCV 形态学 形状检测这个只是之前在群里提到, 大家有兴趣可以了解一下, 本次任务用不上这个. 基本原理是检测一个轮廓 有几个角点, 比如如果是三个角点肯定是三角形, 如果有一个角是直角那么这是个直角三角形这样. OpenCV shape detection 任务因为大家都并没有学过Python, 一下超纲太多也不好, 我们把任务分为几个阶段. 开始的两个入门任务十分基础, 我也给出了代码. 希望大家能够在别处找到实现代码而不是直接看我 给出的代码, 不然这都搞不定的话后面的任务就完了💪 读入本地图片并显示 function my1() { if(document.getElementById('img').style.display=='none') { document.getElementById('img').style.display = 'block' } else if(document.getElementById('img').style.display=='block') { document.getElementById('img').style.display = 'none' } } 点击以查看或隐去代码 import cv2 #将下面图片地址换为你自己的 image = cv2.imread(‘test/test1.jpg’) cv2.imshow(‘image’, image) # 0表示永久等待键盘输入，waitKey()是键盘绑定函数，时间尺度是毫秒级，特定的几毫秒内，如果有键盘输入，函数会返回按键的ASCII码值 cv2.waitKey(0) # 删除建立的窗口，删除特定的窗口用cv2.destroyWindow(),参数是想删除的窗口名 cv2.destroyAllWindows() 调用电脑摄像头并显示实时视频 function my2() { if(document.getElementById('video').style.display=='none') { document.getElementById('video').style.display = 'block' } else if(document.getElementById('video').style.display=='block') { document.getElementById('video').style.display = 'none' } } 点击以查看或隐去代码 import cv2 cap = cv2.VideoCapture(0) while(cap.isOpened()): if cv2.waitKey(1) &amp; 0xFF == ord(‘1’): # 按1退出程序 break ret, frame = cap.read() cv2.imshow(‘frame’, frame) cap.release() cv2.destroyAllWindows() 图像指定颜色提取⚠ 此处对背景的定义是不是我们目标的部分. 比如我们要提取红色部分, 那么不是红色 的部分就是背景. 纯色背景比如白色背景中的红球. 实际上在纯色背景中的色块我们甚至不需要去做过多的检测了, 因为此时已经很明显了: 图像分为红 和另一种颜色. 即使可能有深浅不同的红色, 此时我们只需要用一个二值化算法根据目标区域和背景 区域灰度值不同就可以完成分割了. 在此我推荐OTSU算法 (又称大津算法), 这是一种很经典的阈值分割算法 (根据阈值对图像进行 二值化) 使用并不难, 调用OpenCV里一个函数就能用啦. 使用方法可以参考 这里 算法的原理我就不做解释了, 想了解可以上网搜索. 这篇文章或许对你有所 启发. 复杂背景在上面那样特殊的情况 (比如已知是白色背景中的红球) 中我们只需要二值化就可以提取红色, 但 如果背景比较复杂, 比如下面的几张测试图片, 甚至背景中有和目标相近的颜色时我们就需要用细腻 一些的算法了. 比如我们需要先界定什么是我们所认可的红色 (是桩桶的红色). 但是因为光线原因 即使是同一个桩桶在不同条件下拍出来的颜色也是不同的, 因此这个颜色范围并不是那么好界定的. 测试图片test1 test2 test3 ⭐ test3这张图的重点是在图中车顶棚上方有一块砖红色的区域, 请尽量过滤掉这种我们 不需要的砖红色. 视频指定颜色提取结合上一步写的红色提取函数和上上步显示实时视频的代码, 实现输出来的实时视频是红色部分为 白色, 其他颜色部分为黑色. ⭐ 本次任务愉快完成😄 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2019寒假</category>
        <category>嵌入式</category>
      </categories>
      <tags>
        <tag>LeoJhonSong</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[嵌入式与C(侧重调试)]]></title>
    <url>%2F2019%2F01%2F%E5%B5%8C%E5%85%A5%E5%BC%8F%E4%B8%8EC-%E4%BE%A7%E9%87%8D%E8%B0%83%E8%AF%95%2F</url>
    <content type="text"><![CDATA[我们大部分组员已经学过C语言了, 即便没学过, C语言也不难上手. 我不打算笼统地讲语法, 即便是单片机特有的C语言语法也不算难, 怎么写中断函数, 怎么写延时函数你们自己也能很容易搞懂的👍因此这次我打算主要提几个比较重要的理念和一些调试经验. ✔ 学习C语言我推荐这个教程.如果你担心只是少量操作容易忘记学过的知识,网上有很多练习题的,一搜一箩筐. 理论几个理念起顺眼的名字变量和函数的命名实际上也是个很重要的问题. 试想在团队中你出于个人喜好命名了别人看不懂的标识符,当别人要审阅你的代码时他不能通过这些名字一眼看出你表达的意思, 极大的降低了效率, 而且假如你的命名习惯和他的完全相反, 他的体感会很差. 因此最好的办法是使用统一而直观的命名法. 驼峰命名法下划线命名法匈牙利命名法面向对象善用宏定义一口吃不成大胖子当要做一个大工程的时候你首先应该想到去GitHub找找有没有有帮助的代码 (Ctrl C Ctrl V), 在网上搜一搜有没有人做过相关工作, 也许应用不一样, 但很与可能他的代码思路对你很有帮助. 林子大了, 你想做的总有人做过或者为你做了铺垫. 另一方面, 你应该总是从一个能正确运行的小规模程序开始，每做一步小的改动就立刻进行调试，这样的好处是总有一个正确的程序做参考：如果正确就继续编程，如果不正确，那么一定是刚才的小改动出了问题。例如，Linux操作系统包含了成千上万行代码，但它也不是一开始就规划好了内存管理、设备管理、文件系统、网络等等大的模块，一开始它仅仅是Linus Torvalds用来琢磨Intel 80386芯片而写的小程序。据Larry Greenfield 说，“Linus的早期工程之一是编写一个交替打印AAAA和BBBB的程序，这玩意儿后来进化成了Linux。”（引自The Linux User’s Guide Beta1版） 有了注释, 妈妈再也不用担心我读不懂代码代码片段 (snippets) 野指针一些调试经验首先要指出Bug分为三种: 编译时错误 编译器只能翻译语法正确的程序，否则将导致编译失败，无法生成可执行文件。对于自然语言来说，一点语法错误不是很严重的问题，因为我们仍然可以读懂句子。而编译器就没那么宽容了，只要有哪怕一个很小的语法错误，编译器就会输出一条错误提示信息然后罢工，你就得不到你想要的结果。虽然大部分情况下编译器给出的错误提示信息就是你出错的代码行，但也有个别时候编译器给出的错误提示信息帮助不大，甚至会误导你。在开始学习编程的前几个星期，你可能会花大量的时间来纠正语法错误。等到有了一些经验之后，还是会犯这样的错误，不过会少得多，而且你能更快地发现错误原因。等到经验更丰富之后你就会觉得，语法错误是最简单最低级的错误，编译器的错误提示也就那么几种，即使错误提示是有误导的也能够立刻找出真正的错误原因是什么。相比下面两种错误，语法错误解决起来要容易得多。 运行时错误 编译器检查不出这类错误，仍然可以生成可执行文件，但在运行时会出错而导致程序崩溃。比如 逻辑错误和语义错误 如果程序里有逻辑错误，编译和运行都会很顺利，看上去也不产生任何错误信息，但是程序没有干它该干的事情，而是干了别的事情。当然不管怎么样，计算机只会按你写的程序去做，问题在于你写的程序不是你真正想要的，这意味着程序的想法（即语义）是错的。找到逻辑错误在哪需要十分清醒的头脑，要通过观察程序的输出回过头来判断它到底在做什么。 烫烫烫屯屯屯锟斤拷字符的编码格式也是个很令人头疼的问题,一不小心就会出错. 烫烫烫, 屯屯屯, 锟斤拷正是由此而来的梗.但实际上前两个和锟斤拷的产生原因完全不一样.烫烫烫和屯屯屯是因为微软编译器 (MSVC) 的内存保护机制，锟斤拷是编码字符集转换问题。 ✔ 点击这里进一步了解字符串 ✔ 具体解释参见以下两个链接: 知乎-烫烫烫屯屯屯那些事 知乎-锟斤拷是什么? 别忘了编译!有的时候你可能会陷入绝望, 发现怎么改自己觉得可能出错的地方程序运行仍然报错, 你可能欣喜的发现了自己之前犯的一个愚蠢的语法错误, 觉得改过来肯定就能完美运行了, 可现实是不管你怎么改程序,就算把所有代码都删了徐行程序仍然是那个报错. 这时候你要看看你是否在改动代码后重新编译了程序, 不然你的程序运行起来当然不会有任何改变. 在有的工具中, 比如CodeBlocks中有build, run, build and run 三个按钮, 建议大家认准build and run. 数据溢出习题神秘报错在C语言程序中有这么一种错误, 再怎么看代码也看不出错, 但编译器就是报错. 请找出下面这个程序的错误. 1234567#include &lt;stdio.h&gt;int main(void){ printf("Hello, world.\n")； return 0；} 正如前面提到的, 宏定义是个很好的东西, 在接下来的两个例子中我们用宏定义弄些奇怪的东西😏 一门新语言请写一个head.h文件, 满足程序以下条件: 用I love{}来定义主函数 以perfect来返回主函数值 主程序中只能引用head.h一个头文件 fury语句打印Hello World! OYeah语句实现getchar() 你可以用以下程序测试你发明的新语言是否成功 (head.h是否满足要求) 123456789#include "head.h"I love{ fury OYeah OYeah perfect} ⭐ 编译器是MinGW(Minimalist GNU for Windows) 的话标识符不能是中文, 但如果你的编译器是MSVC的话, 标识符允许是中文😏 也就是说你可以通过define关键字写出以下这样的程序 123456789#define "head.h"整数 主函数(){ 打印("你好"); 获取字符(); 获取字符(); 返回 零;} 这个比较骚这个使用define的命题我也觉得很骚 1#include &lt;stdio.h&gt; ⬅ 123456789101112131415161718void Print1(){ printf("11111\n");}void Print2(){ printf("22222\n");}int main(){ Print1; Print2; getchar(); getchar(); return 0;} 请在箭头位置加几行代码使得以上代码输出为: 121111122222 ⚠只要能够得到这个输出就可以, 不必怀疑自己的方法 先来后到这类错误也是很容易忽略的错误 现在C99标准的x86平台整型变量是32位的, 也就是说取值范围是-2147483648~2147483647. 现在我们写一段代码做一些计算并打印出来, 检测以下这个标准. 123456789101112131415161718192021#include &lt;stdio.h&gt;#include &lt;math.h&gt;int main(){ int a = 2; int b = 1; int c = 0; while(1) { a = a * 4; b = b * 2; c = a * a / b / b / 2; printf("%d\n", c); if(c&lt;=0) break; // 当幂非正了明显就数据溢出了, 跳出循环 } getchar(); getchar(); return 0;} 这段代码打印了一些2为底的幂, 一直打印到数据溢出为止, 只不过是生成幂的方式骚一点. 现在我们脑补一下输出, 应该是这样: 12345678910111213141583212851220488192327681310725242882097152838860833554432134217728536870912-2147483648 然而实际上 1234567883212851220488192327680 嗯? 怕不是其实整形的范围是-32767~32768? 为什么到32768就爆了呢??? 轻松一刻好吧看了几个难的我们解决一个简单的轻松一下 123456789101112131415#include &lt;stdio.h&gt;int main(){ int i; char c[23] = "AaBbCcDdEeFfGgHhIiJjKk"; for(i = -1;i&lt;23;) { i = i + 2; printf("%c\n", c[i]); } getchar(); getchar(); return 0;} 我们试图用这段代码输出小写字母, 但为什么出错了呢? ⚠ 可能并不会报错只是会有乱码 注释MSVCMicrosoft Visual C++. MSVC集成于Visual Studio中, 也就是说如果你用的IDE是VS并且你没有换编译器的话, 那么编译器一定是MSVC,如果是别的其他IDE一般来说默认编译器是gcc, 但一般也可以换成以MSVC为编译器 x86上面说到的x86平台是32位的处理器架构, 而另一个很有名的x64是x86-64的缩写, 是基于x86的64位处理器架构, 向后兼容x86. 因为最先由AMD公开64位指令集因此又称AMD64. 整形变量✔ 点击这里进一步认识整形变量 值得注意的是, 正如上面链接中提到的整形变量的位数是Implementation Defined的,也就是说位数是由平台决定的. 比如x86平台int为32位, x64平台int为64位, 在C51中int为16位. 这正体现了C语言的特性之一: 优先考虑效率，而可移植性尚在其次. C语言与平台和编译器是分不开的, 正如上面MinGW不支持中文标识符而MSVC支持中文标识符, 正如习题先来后到中的问题. 因此大家如果要将代码移植到其他平台一定要确认有没有哪些代码是不可移植或者需要改动的. document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2019寒假</category>
        <category>嵌入式</category>
      </categories>
      <tags>
        <tag>LeoJhonSong</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一些单片机基础概念]]></title>
    <url>%2F2019%2F01%2F%E4%B8%80%E4%BA%9B%E5%8D%95%E7%89%87%E6%9C%BA%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[鉴于大家对单片机/嵌入式了解都不多,我们先从一些基础概念说起. 💬 如有任何疑问可以随时问我 (以下许多内容抄自维基) 嵌入式与单片机的区别首先说说为什么我更倾向于称之嵌入式培训而非单片机培训. 实际上车队目前的嵌入式系统中不止有单片机, 目前也打算引进树莓派, 日后也必定会更多的使用单板机, 这个寒假的以了解为主的培训我打算不止将单片机的内容, 也会和大家一起探索些别的. 因此这次培训称作嵌入式培训而不是单片机培训. 嵌入式🚩 嵌入式系统的维基百科 (需要翻墙) 一般说嵌入式都是指嵌入式系统，IEEE(InsTItuteof Electrical and ElectronicsEngineers，美国电气和电子工程师协会)对嵌入式系统的定义：“用于控制、监视或者辅助操作机器和设备的装置”。 单片机🚩 单片机的维基百科 单片机，全称单片微型计算机（single-chip microcomputer）,但通常缩写为MCU (Micro Controller Unit), 又称微控制器, 是把中央处理器、存储器、定时/计数器（timer/counter）、各种输入输出接口等都集成在一块集成电路芯片上的微型计算机. 举例及相关链接由以上两个定义我们可以看出嵌入式系统和单片机是不同层面的概念, 实际上并不应该相提并论.一个嵌入式系统中可以包含单片机,也可以没有单片机.比如我们的赛车的电气部分是一个嵌入式系统, 因为它是我们根据车检规则专门设计的系统, 而这个系统中包含了k60, XC2267M等单片机. 当然如果我们的系统中只有树莓派 (树莓派是一种单板机) 的话,这个系统中明显就没有单片机了. ✔ 以下几个链接应该可以帮助理解单片机, 单板机和嵌入式, 当然你也可以在网上做更多搜索. CSDN-嵌入式和单片机的区别 知乎-请问Linux嵌入式和单片机嵌入式到底什么区别? 知乎-怎样选择一款合适的单板机？ eeworld-单片机、微控制器和微处理器有什么区别？ 百度文库-通用PC系统与嵌入式系统的区别 ⚠ 大家一定要辩证的看待网上的内容, 谁都有可能说错. 软件方面的内容更是要关注文章发布时间, 很有可能因为版本问题你遇到的情况并不能用别人的方法解决. 目前车上用到的,将要用到的几种开发板英飞凌 (infineon) 的 XC2267M这个单片机是目前的主力,放在驾驶舱脚附近的一个铁盒子里,作为VCU.有关这个单片机的资料不多,但也够我们利用. 它的优点是为了稳定性屏蔽了大量接口, 在板子上应该还有一些滤波电路. 缺点就是正因为屏蔽了大量接口, 可拓展性很差. 飞思卡尔 (Freescale) 的 k60k60在18年的车上放在车头部,从VCU读取数据并显示在车手的显示器上. 但实际上这个单片机功能并不比XC2367M差, 甚至可拓展性更强, 功能上足以充当VCU. 但因为别的车队用类似单片机作VCU 出现了CAN通信掉线等信号受干扰问题, 我们担心k60的屏蔽做的不够好, 也可能出现类似情况. 树莓派 (RaspberryPi)3b+目前这块板子的具体用途还没定, 但预计会利用它在车上搭建一个网站, 发送车的各种数据, 也负责显示屏的输出. 树莓派相对上述两个板子性能要强大一些,应用也更智能一些. 但尴尬的是树莓派本身不具备CAN通信接口,需要转换.树莓派是一个微型电脑,但和电脑上常见的x86, x64等指令集不同, 采用的是ARMv8架构, 因此不管是装系统还是装软件都需要安装ARM版. 值得一提的是树莓派是可以安装操作系统的,而且可以安很多种系统. 常见系统有以下几种: Raspbian这是树莓派官方系统, Debian系的Linux系统. 相关资源最多, 使用的人也最多. Windows 10 IoT Core这几年IoT (物联网) 很火, 而树莓派因为足够智能, 入门不难被很多极客喜爱, windows的这个IoT系统就很火啦 Ubuntu MateUbuntu是一个很多人用的Linux发行版, 其中也有机器人界公认的操作系统ROS是基于Ubuntu开发的原因.但我自己的体验是ARM架构的Ubuntu系统体感并不好, 相关资源很少,使用的人也不那么多. 更多当然树莓派还能装更多奇奇怪怪的系统, 比如 Windows 10 (ARM版), Mac OS, Android等. 一些重要概念烧录参见: 知乎-为什么烧录叫「烧」录？ 21ic-单片机ISP、IAP和ICP几种烧录方式的区别 波特率波特（Baud）即调制速率，即单位时间内载波调制状态变化的次数。它是对符号传输速率的一种度量，1波特即指每秒传输1个符号，而通过不同的调制方式，可以在一个码元符号上负载多个bit位信息。波特本身已是速率，所以不需要写成 Baud Rate（Rate 是赘字）。单位“波特”本身就已经是代表每秒的调制数，以“波特每秒”（Baud per second）为单位是一种常见的错误，但是在一般中文口语化的沟通上还是常以“波特率”来描述“波特”（Baud）。 波特率有时候会同比特率混淆，实际上后者是对信息传输速率（传信率）的度量。波特率可以被理解为单位时间内传输符号的个数（传符号率），通过不同的调制方法可以在一个符号上负载多个比特信息。因此信息传输速率即比特率在数值上和波特率有这样的关系： $I=S \cdot \log _{2}{N}$ 其中I 为传信率，S 为波特率，N 为每个符号负载的信息量，而 $\log _{2}{N}$以比特为单位。因此只有在每个符号只代表一个比特信息的情况、或一些简单的调制方式下，波特率与比特率才在数值上相等，但是它们的意义并不相同。 🚩 以RS232 (一种串口接口) 为例 常用的波特率有300, 1200, 2400, 9600, 19200, 38400, 115200等 (虽然我也不知道为什么).假设目前波特率为 9600， 则此RS232的比特率计算为 $I=S\cdot \log {2}{N}=9600\cdot \log {2}{2}=9600bit/s$ 常有人把RS232的 N 误以为是每个符号所夹带的讯息量为$2^{8}$，但实际上每一个比特即为一个符号 晶振晶振是给单片机提供工作信号脉冲的. 这个脉冲就是单片机的工作速度, 比如12M晶振的单片机工作速度就是每秒12M. 参见: eeworld-单片机晶振电路详解 搞懂51单片机晶振这21问题 中断中断是计算机领域一个很重要的概念, 在单片机中应用也非常多. 中断是用以提高计算机工作效率、增强计算机功能的一项重要技术。最初引入硬件中断，只是出于性能上的考量。如果计算机系统没有中断，则处理器与外部设备通信时，它必须在向该设备发出指令后进行忙等待（Busy waiting），反复轮询该设备是否完成了动作并返回结果。这就造成了大量处理器周期被浪费。引入中断以后，当处理器发出设备请求后就可以立即返回以处理其他任务，而当设备完成动作后，发送中断信号给处理器，后者就可以再回过头获取处理结果。这样，在设备进行处理的周期内，处理器可以执行其他一些有意义的工作，而只付出一些很小的切换所引发的时间代价。后来被用于CPU外部与内部紧急事件的处理、机器故障的处理、时间控制等多个方面，并产生通过软件方式进入中断处理（软中断）的概念。 串口与并口串口串行端口, 即 COM口 (Communication port), 是以串行 (在计算机总线或其他数据信道上，每次传输一个比特数据，并连续进行以上单次过程的通信方式), 的方式传输数据的接口.常见接口标准有RS-232、USB (Universal Serial Bus, 即通用串行总线接口, 这很明显是串口了😏)、RS-422、RS485等. ⚠ 要注意接口标准只对接口的电气特性做出规定，不涉及接插件、电缆或协议。而连接器 (Connector) 才是我们常说的插头.比如大名鼎鼎的雷电 (Thunderbolt) 1, 2代以mini DP连接器实现而雷电3以type-C形式实现. 并口并行端口, 又称 LPT (Logical Parallel Port). 是计算机上数据以并行方式 (多比特数据同时通过并行线进行传送)传递的接口，也就是说至少有两条线用于传递数据. 这样数据传送速度大大提高，但并行传送的线路长度受到限制，因为长度增加，干扰就会增加，数据也就容易出错. 因此虽然按原理看并口可以达到比串口更高的速度, 但并口由于8位通道之间的互相干扰,传输受速度就受到了限制,当传输出错时，要同时重新传8个位的数据。串口没有干扰，传输出错后重发一位就可以了。所以目前串口通常比并口快。 ✔ 以下几个链接应该可以帮助理解串口与并口 并口、串口、COM口区别 知乎-为什么串口比并口快? 上位机, 下位机参见: 了解上位机 CSDN-上位机和下位机基础概念 常用通信协议目前车上主要用到CAN通信, 树莓派因为没有CAN接口, 目前采用用模块将CAN转为SPI的方式接受CAN总线里的数据 CAN参见: 简书-CAN总线协议简介 知乎-如何学习CAN总线? 知乎-CAN总线基础(上) SPI略 UART略 IIC略 参考: 百度文库-多种工业应用串行总线特性及比较 单片机开发大致流程编写程序单片机程序一般使用C/C++语言编写,因为这两个语言能保证运行速度(比如可以参考以下这个).编写完程序并且可以通过编译后我们会得到一个hex文件 (一个十六进制文件), 这个文件正是我们要烧录到单片机的文件. ⚠ 但也有例外, 有的单片机执行的文件是bin文件 (二进制文件), 这类单片机也不需要烧录软件来把执行文件烧录进去, 电脑会将其识别为一个储存设备,直接将文件放进去就可以了. Keil单片机开发最常用的就是Keil了, Keil, 从链接中可以看到, Keil对应各种芯片内核推出了 MDK-Arm, C51, C251, C166 四个版本.比如我们的XC2267M属于C166系列, 那就该用 Keil C166, 而k60属于Arm系列, 因此该用 Keil MDK-Arm,而如果你想玩51, 就得用Keil C51. 实际上不需要这么麻烦. 这四个版本之间的差别其实只是分别对另三个系列芯片的功能进行了锁死, 用破解软件的我们只需要对这几个版本都破解以下就可以了😏. Visual Studio CodeVSC也是我现在用的很顺手的代码工具. 它虽然只是个编辑器 (也就是记事本那种东西) , 但得益于热心网友们开发的丰富插件, VSC几乎可以用于任何语言的开发 (虽然有些语言的调试功能还是没有IDE强大),因此现在很多人在用. 但VSC不是那么容易上手, 尤其C/C++语言支持的配置有点麻烦, 如果大家有兴趣可以来找我. 正如上面说到的, 目前单片机开发面临一个很尴尬的局面, 要开发不同单片机通常需要用不同工具.针对这个问题, 一个叫 PlatformIO的项目出现了. 这个项目致力于创造一个统一的单片机开发工具, 目前已经支持绝大多数单片机,这里是支持的单片机列表. (实际上它不止支持单片机, 也支持很多单板机). 虽然PlatformIO已经推出了专门的IDE, 但它也有VSC插件版目前我正在使用这个插件, 体验良好😄 其他Keil只有Windows版, 但VSC是跨平台的, 在Windows, Linux, Mac OS 下都有, 因此我觉得PlatformIO的出现极大的方便了Linux, Mac OS的单片机开发者们. 在这之前在Linux, Mac OS下当然是可以开发单片机的,但需要一定的水平, 总之很麻烦, 也没什么成熟的软件. 烧录到单片机一般操作步骤如下: 打开烧录软件 (也有的单片机就用Keil就可以烧录)，选择单片机型号和单片机连在电脑上哪个COM端口，选择刚生成那个hex文件 点击下载 打开单片机电源,注意不是等下载完成才打开, 开始下载后过几秒就可以按 (有的单片机如果不先断开电源烧录是无法完成的. 但也有的没有电源键的单片机是在烧录完成后需要按重启键重启单片机). ✔ 在Keil下烧录程序到51的具体操作可以参考这个 调试相比电脑上开发, 单片机开发有个令人很头疼的地方是不好调试, 也就是我们不是那么容易找出程序哪里出错了. 使用Keil的话我们可以对单片机进行在线调试,这是个很方便的功能, 允许我们打断点等. VSC下的PlatformIO也提供许多调试功能不过我并没有体验过. 至于其他方式… 目测吧. 一些问题看到最后, 希望大家现在已经能对以下几个问题做出回答 嵌入式和单片机到底有什么区别? 为什么我们还在用看起来很麻烦的XC2267M? 为什么不能直接给树莓派安装电脑常用的Windows 10系统? 烧录为什么叫烧录? 如何写一个C语言中断函数? 串口和并口有什么区别? 哪些常见连接器是串口/并口? CAN通信的大致原理是什么? 在Linux平台下可以作单片机开发吗? 你猜我还想问什么?😏 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>电气组培训</category>
        <category>2019寒假</category>
        <category>嵌入式</category>
      </categories>
      <tags>
        <tag>LeoJhonSong</tag>
      </tags>
  </entry>
</search>
